Search.setIndex({"docnames": ["api/inFairness", "api/inFairness.auditor", "api/inFairness.auditor.auditor", "api/inFairness.auditor.datainterface", "api/inFairness.auditor.sensei_auditor", "api/inFairness.auditor.sensr_auditor", "api/inFairness.auditor.senstir_auditor", "api/inFairness.distances", "api/inFairness.distances.distance", "api/inFairness.distances.euclidean_dists", "api/inFairness.distances.explore_distance", "api/inFairness.distances.logistic_sensitive_subspace", "api/inFairness.distances.mahalanobis_distance", "api/inFairness.distances.sensitive_subspace_dist", "api/inFairness.distances.wasserstein_distance", "api/inFairness.fairalgo", "api/inFairness.fairalgo.datainterfaces", "api/inFairness.fairalgo.sensei", "api/inFairness.fairalgo.sensr", "api/inFairness.fairalgo.senstir", "api/inFairness.postprocessing", "api/inFairness.postprocessing.base_postprocessing", "api/inFairness.postprocessing.data_ds", "api/inFairness.postprocessing.datainterfaces", "api/inFairness.postprocessing.distance_ds", "api/inFairness.postprocessing.glif", "api/inFairness.utils", "api/inFairness.utils.datautils", "api/inFairness.utils.misc", "api/inFairness.utils.ndcg", "api/inFairness.utils.params", "api/inFairness.utils.plackett_luce", "api/inFairness.utils.postprocessing", "api/inFairness.utils.validationutils", "api/modules", "changelog", "development/auditors", "development/distances", "development/index", "examples", "index", "papers", "reference/algorithms", "reference/auditors", "reference/distances", "reference/index", "reference/postprocessing", "reference/utilities", "tutorial"], "filenames": ["api/inFairness.rst", "api/inFairness.auditor.rst", "api/inFairness.auditor.auditor.rst", "api/inFairness.auditor.datainterface.rst", "api/inFairness.auditor.sensei_auditor.rst", "api/inFairness.auditor.sensr_auditor.rst", "api/inFairness.auditor.senstir_auditor.rst", "api/inFairness.distances.rst", "api/inFairness.distances.distance.rst", "api/inFairness.distances.euclidean_dists.rst", "api/inFairness.distances.explore_distance.rst", "api/inFairness.distances.logistic_sensitive_subspace.rst", "api/inFairness.distances.mahalanobis_distance.rst", "api/inFairness.distances.sensitive_subspace_dist.rst", "api/inFairness.distances.wasserstein_distance.rst", "api/inFairness.fairalgo.rst", "api/inFairness.fairalgo.datainterfaces.rst", "api/inFairness.fairalgo.sensei.rst", "api/inFairness.fairalgo.sensr.rst", "api/inFairness.fairalgo.senstir.rst", "api/inFairness.postprocessing.rst", "api/inFairness.postprocessing.base_postprocessing.rst", "api/inFairness.postprocessing.data_ds.rst", "api/inFairness.postprocessing.datainterfaces.rst", "api/inFairness.postprocessing.distance_ds.rst", "api/inFairness.postprocessing.glif.rst", "api/inFairness.utils.rst", "api/inFairness.utils.datautils.rst", "api/inFairness.utils.misc.rst", "api/inFairness.utils.ndcg.rst", "api/inFairness.utils.params.rst", "api/inFairness.utils.plackett_luce.rst", "api/inFairness.utils.postprocessing.rst", "api/inFairness.utils.validationutils.rst", "api/modules.rst", "changelog.md", "development/auditors.md", "development/distances.md", "development/index.md", "examples.md", "index.md", "papers.md", "reference/algorithms.md", "reference/auditors.md", "reference/distances.md", "reference/index.md", "reference/postprocessing.md", "reference/utilities.md", "tutorial.md"], "titles": ["inFairness package", "inFairness.auditor package", "inFairness.auditor.auditor module", "inFairness.auditor.datainterface module", "inFairness.auditor.sensei_auditor module", "inFairness.auditor.sensr_auditor module", "inFairness.auditor.senstir_auditor module", "inFairness.distances package", "inFairness.distances.distance module", "inFairness.distances.euclidean_dists module", "inFairness.distances.explore_distance module", "inFairness.distances.logistic_sensitive_subspace module", "inFairness.distances.mahalanobis_distance module", "inFairness.distances.sensitive_subspace_dist module", "inFairness.distances.wasserstein_distance module", "inFairness.fairalgo package", "inFairness.fairalgo.datainterfaces module", "inFairness.fairalgo.sensei module", "inFairness.fairalgo.sensr module", "inFairness.fairalgo.senstir module", "inFairness.postprocessing package", "inFairness.postprocessing.base_postprocessing module", "inFairness.postprocessing.data_ds module", "inFairness.postprocessing.datainterfaces module", "inFairness.postprocessing.distance_ds module", "inFairness.postprocessing.glif module", "inFairness.utils package", "inFairness.utils.datautils module", "inFairness.utils.misc module", "inFairness.utils.ndcg module", "inFairness.utils.params module", "inFairness.utils.plackett_luce module", "inFairness.utils.postprocessing module", "inFairness.utils.validationutils module", "inFairness", "Changelog", "Auditors", "Distances", "Development", "Examples", "inFairness", "Papers implemented", "Algorithms", "Auditors", "Distances", "API Documentation", "Post-Processing", "Utilities", "Tutorial"], "terms": {"auditor": [0, 15, 17, 18, 19, 34, 38, 42, 45], "submodul": [0, 34], "datainterfac": [0, 1, 4, 5, 15, 20, 43], "auditorrespons": [0, 1, 2, 3, 4, 5, 36, 43], "sensei_auditor": [0, 1], "senseiauditor": [0, 1, 4, 40, 43], "sensr_auditor": [0, 1], "sensrauditor": [0, 1, 5, 40, 43], "senstir_auditor": [0, 1], "senstirauditor": [0, 1, 6, 40, 43], "audit": [0, 1, 2, 4, 5, 36, 39, 40, 43], "compute_audit_result": [0, 1, 2, 36, 40], "compute_loss_ratio": [0, 1, 2, 36, 40], "generate_worst_case_exampl": [0, 1, 2, 4, 5, 6, 36, 40, 43], "distanc": [0, 1, 4, 5, 6, 15, 17, 18, 19, 20, 21, 22, 24, 25, 27, 32, 34, 35, 38, 40, 42, 43, 45, 46, 47, 48], "euclidean_dist": [0, 7], "euclideandist": [0, 7, 9, 40, 44, 48], "protectedeuclideandist": [0, 7, 9, 40, 44], "explore_dist": [0, 7], "exploredist": [0, 7, 10, 40, 44], "logistic_sensitive_subspac": [0, 7], "logisticregsensitivesubspac": [0, 7, 11, 40, 44], "mahalanobis_dist": [0, 7], "mahalanobisdist": [0, 1, 6, 7, 10, 12, 13, 14, 15, 19, 37, 40, 42, 43, 44], "squaredeuclideandist": [0, 7, 12], "sensitive_subspace_dist": [0, 7], "svdsensitivesubspacedist": [0, 7, 13, 40, 44, 48], "sensitivesubspacedist": [0, 7, 11, 13, 37, 40, 44], "wasserstein_dist": [0, 7], "wassersteindist": [0, 7, 14, 40, 44], "fit": [0, 7, 8, 9, 10, 11, 12, 13, 37, 40, 44, 48], "forward": [0, 7, 8, 9, 12, 14, 15, 17, 18, 19, 37, 40, 42, 44], "load_state_dict": [0, 7, 8, 37, 40], "train": [0, 1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 39, 40, 41, 42, 43, 44, 48], "compute_sigma": [0, 7, 10], "compute_basis_vectors_data": [0, 7, 11], "compute_basis_vectors_protected_idx": [0, 7, 11], "logistic_regression_model": [0, 7, 11, 40, 44], "compute_basis_vector": [0, 7, 13, 40, 44], "compute_projection_compl": [0, 7, 13, 37, 40, 44], "fairalgo": [0, 34, 42, 48], "fairmodelrespons": [0, 15, 16], "sensei": [0, 1, 2, 4, 15, 36, 40, 41, 48], "sensr": [0, 1, 2, 5, 15, 17, 19, 36, 40], "senstir": [0, 1, 6, 15, 40], "loss": [0, 1, 2, 4, 5, 15, 16, 17, 18, 36, 42, 43, 48], "y_pred": [0, 15, 16], "forward_test": [0, 15, 17, 18, 19, 40, 42], "forward_train": [0, 15, 17, 18, 19, 40, 42], "postprocess": [0, 26, 34, 40, 46, 47], "base_postprocess": [0, 20], "basepostprocess": [0, 20, 21, 25, 40, 46], "data_d": [0, 20], "postprocessingdatastor": [0, 20, 22], "postprocessingobjectiverespons": [0, 20, 23, 25, 46], "distance_d": [0, 20], "distancestructur": [0, 20, 24], "glif": [0, 20, 40], "graphlaplacianif": [0, 20, 25, 40, 46], "add_datapoint": [0, 20, 21, 22, 40, 46], "data": [0, 1, 2, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 27, 32, 33, 36, 37, 39, 40, 41, 42, 43, 44, 46, 48], "distance_matrix": [0, 20, 21, 22, 40, 46], "reset_datapoint": [0, 20, 21, 40, 46], "get_object": [0, 20, 25, 40, 46], "util": [0, 34, 40, 45], "datautil": [0, 26, 47], "convert_tensor_to_numpi": [0, 26, 27, 40, 47], "generate_data_pair": [0, 26, 27, 40, 47], "get_devic": [0, 26, 27, 40, 47], "include_exclude_term": [0, 26, 27, 40, 47], "misc": [0, 26], "initi": [0, 1, 6, 20, 21, 22, 24, 26, 28, 35, 43, 46], "ndcg": [0, 26], "discounted_cumulative_gain": [0, 26, 29], "monte_carlo_vect_ndcg": [0, 26, 29], "normalized_discounted_cumulative_gain": [0, 26, 29], "vect_normalized_discounted_cumulative_gain": [0, 26, 29], "param": [0, 26], "freeze_network": [0, 26, 30], "unfreeze_network": [0, 26, 30], "plackett_luc": [0, 26], "plackettluc": [0, 26, 31], "build_graph_from_dist": [0, 26, 32, 40, 47], "get_laplacian": [0, 26, 32, 40, 47], "laplacian_solv": [0, 26, 32, 40, 47], "validationutil": [0, 26], "is_tensor_binari": [0, 26, 33], "confid": [1, 2, 3, 4, 5, 36, 43], "is_model_fair": [1, 3], "lossratio_mean": [1, 3], "lossratio_std": [1, 3], "lower_bound": [1, 3, 31], "pval": [1, 3], "threshold": [1, 2, 3, 4, 5, 20, 25, 32, 36, 43, 46, 47], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 36, 40, 42, 43, 44, 47], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 37, 42, 43, 44, 46, 47], "base": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 40, 44, 47], "object": [1, 2, 3, 4, 5, 6, 7, 14, 15, 16, 20, 21, 22, 23, 24, 25, 27, 29, 31, 43, 44, 46, 47], "abstract": [1, 2, 7, 8, 36, 37], "model": [1, 2, 4, 5, 6, 7, 8, 11, 13, 15, 17, 18, 19, 20, 21, 25, 32, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47], "e": [1, 2, 29, 36, 40], "g": [1, 2, 29, 36], "arg": [1, 2, 4, 5, 6, 15, 17, 18, 20, 21, 25, 31, 36, 42, 43, 46], "kwarg": [1, 2, 7, 8, 15, 17, 18, 19, 20, 21, 36, 37, 42], "individu": [1, 2, 4, 5, 6, 7, 10, 11, 13, 14, 15, 17, 18, 19, 20, 25, 35, 36, 39, 40, 41, 42, 43, 44, 48], "fair": [1, 2, 4, 5, 6, 7, 10, 11, 13, 14, 15, 17, 18, 19, 20, 25, 35, 36, 39, 40, 41, 42, 43, 44, 48], "loss_ratio": [1, 2, 36], "none": [1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 17, 18, 20, 23, 25, 27, 31, 32, 36, 37, 42, 43, 44, 46, 47], "0": [1, 2, 4, 5, 6, 7, 10, 31, 33, 36, 40, 43, 44, 48], "95": [1, 2, 4, 5, 36, 43], "comput": [1, 2, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 24, 25, 29, 32, 35, 36, 37, 42, 44, 46, 47], "statist": [1, 2, 4, 5, 36, 41, 43], "given": [1, 2, 4, 5, 6, 7, 11, 13, 27, 31, 32, 36, 37, 43, 44, 47], "ratio": [1, 2, 4, 5, 36, 43], "user": [1, 2, 4, 5, 7, 13, 28, 36, 43, 44], "specifi": [1, 2, 4, 5, 7, 11, 27, 31, 36, 39, 43, 44, 47], "accept": [1, 2, 7, 13, 35, 36, 37, 44], "paramet": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 37, 42, 43, 44, 46, 47], "numpi": [1, 2, 27, 36, 47], "ndarrai": [1, 2, 27, 33, 36, 47], "list": [1, 2, 7, 8, 9, 11, 13, 27, 36, 37, 44, 47], "between": [1, 2, 7, 8, 9, 12, 14, 22, 24, 27, 32, 36, 37, 40, 44, 47], "worst": [1, 2, 4, 5, 6, 15, 17, 18, 19, 36, 42, 43], "case": [1, 2, 4, 5, 6, 7, 12, 15, 17, 18, 19, 27, 36, 37, 40, 42, 43, 44, 47], "normal": [1, 2, 20, 25, 29, 32, 36, 46, 47], "sampl": [1, 2, 4, 5, 6, 7, 10, 12, 13, 14, 15, 19, 20, 21, 24, 25, 26, 27, 29, 31, 36, 37, 40, 42, 43, 44, 46, 47], "float": [1, 2, 3, 4, 5, 6, 15, 17, 18, 19, 20, 25, 32, 36, 42, 43, 46, 47], "option": [1, 2, 4, 5, 6, 7, 8, 27, 31, 36, 37, 43, 47], "valu": [1, 2, 4, 5, 20, 25, 29, 31, 32, 36, 43, 46, 47], "If": [1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 27, 31, 36, 37, 43, 44, 47], "i": [1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 20, 21, 24, 25, 27, 29, 31, 32, 33, 36, 37, 40, 43, 44, 46, 47], "procedur": [1, 2, 4, 5, 36, 43], "simpli": [1, 2, 4, 5, 36, 43], "return": [1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 27, 29, 31, 32, 33, 36, 37, 42, 43, 44, 46, 47], "mean": [1, 2, 4, 5, 36, 43], "lower": [1, 2, 4, 5, 36, 43], "bound": [1, 2, 4, 5, 36, 40, 43], "leav": [1, 2, 4, 5, 36, 43], "detemin": [1, 2, 36], "also": [1, 2, 36, 40], "determin": [1, 2, 4, 5, 6, 32, 36, 43, 47], "default": [1, 2, 4, 5, 7, 8, 11, 12, 36, 37, 43, 44], "audit_result": [1, 2, 36], "interfac": [1, 2, 35, 36], "result": [1, 2, 3, 15, 16, 23, 27, 31, 36, 47, 48], "type": [1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 27, 29, 30, 32, 33, 36, 37, 42, 43, 44, 46, 47], "x_audit": [1, 2, 4, 5, 36, 43], "x_worst": [1, 2, 4, 5, 36, 43], "y_audit": [1, 2, 4, 5, 36, 43], "network": [1, 2, 4, 5, 6, 15, 17, 18, 19, 30, 36, 42, 43, 48], "loss_fn": [1, 2, 4, 5, 15, 17, 18, 36, 42, 43], "solv": [1, 2, 4, 5, 6, 7, 14, 32, 36, 43, 44, 47], "gradient": [1, 2, 15, 19, 36, 42], "flow": [1, 2, 36], "attack": [1, 2, 36], "origin": [1, 2, 6, 36, 43], "torch": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32, 36, 37, 42, 43, 44, 46, 47], "tensor": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 35, 36, 37, 42, 43, 44, 46, 47], "shape": [1, 2, 4, 5, 7, 12, 13, 14, 20, 21, 22, 25, 27, 31, 32, 36, 37, 43, 44, 46, 47], "n_sampl": [1, 2, 7, 12, 36, 37, 44], "n_featur": [1, 2, 7, 12, 36, 37, 44], "label": [1, 2, 36], "lambda_param": [1, 2, 4, 5, 6, 20, 25, 32, 36, 43, 46, 47], "lambda": [1, 2, 4, 5, 6, 15, 18, 20, 25, 27, 32, 36, 42, 43, 46, 47], "weight": [1, 2, 4, 5, 6, 20, 25, 32, 36, 43, 46, 47], "defin": [1, 2, 4, 5, 6, 7, 10, 11, 13, 15, 17, 18, 19, 27, 31, 36, 37, 42, 43, 44, 47], "equat": [1, 2, 4, 5, 7, 11, 14, 15, 19, 20, 25, 32, 36, 40, 42, 43, 44, 46, 47], "abov": [1, 2, 4, 5, 6, 7, 11, 13, 32, 36, 37, 40, 43, 44, 47], "us": [1, 2, 7, 11, 12, 13, 14, 20, 21, 22, 25, 27, 31, 32, 36, 40, 44, 46, 47, 48], "gener": [1, 2, 4, 5, 6, 7, 12, 27, 31, 36, 37, 39, 43, 44, 47], "exampl": [1, 2, 4, 5, 6, 15, 17, 18, 19, 27, 31, 36, 40, 42, 43, 47], "input": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 19, 20, 21, 22, 24, 25, 36, 37, 39, 40, 42, 43, 44, 46, 48], "batch": [1, 2, 4, 5, 6, 7, 10, 12, 14, 20, 22, 25, 31, 36, 37, 43, 44, 46], "distance_x": [1, 4, 5, 6, 15, 17, 18, 19, 20, 21, 22, 24, 25, 42, 43, 46, 48], "num_step": [1, 4, 5, 6, 43], "lr": [1, 4, 5, 6, 43, 48], "max_nois": [1, 4, 5, 6, 43], "1": [1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 19, 20, 25, 31, 32, 33, 37, 40, 42, 43, 44, 46, 47, 48], "min_nois": [1, 4, 5, 6, 43], "implement": [1, 4, 5, 7, 8, 10, 11, 12, 13, 15, 17, 18, 19, 20, 25, 31, 35, 37, 40, 42, 43, 44, 46, 48], "function": [1, 4, 5, 7, 8, 14, 15, 17, 18, 27, 29, 31, 37, 42, 43, 44, 47], "follow": [1, 4, 5, 6, 20, 25, 31, 40, 43, 46], "optim": [1, 4, 5, 6, 7, 14, 40, 43, 44, 48], "x_": [1, 4, 5, 7, 10, 43, 44], "t_b": [1, 4, 5, 43], "get": [1, 4, 5, 6, 20, 25, 32, 43, 46, 47], "max_": [1, 4, 5, 6, 43], "x": [1, 4, 5, 7, 8, 9, 10, 15, 17, 18, 19, 20, 21, 22, 27, 37, 40, 42, 43, 44, 46, 47, 48], "l": [1, 5, 7, 11, 20, 25, 32, 40, 43, 44, 46, 47], "y_": [1, 5, 43], "h": [1, 5, 40, 43], "d_x": [1, 5, 7, 10, 11, 40, 43, 44], "2": [1, 5, 6, 7, 10, 11, 12, 13, 14, 20, 25, 27, 31, 37, 39, 40, 43, 44, 46, 47], "propos": [1, 4, 5, 6, 7, 13, 15, 17, 18, 19, 20, 25, 42, 43, 44, 46], "ml": [1, 5, 7, 11, 13, 15, 18, 40, 41, 42, 43, 44], "sensit": [1, 4, 5, 7, 11, 13, 15, 17, 18, 19, 35, 40, 41, 43], "subspac": [1, 5, 7, 11, 13, 15, 18, 19, 35, 40, 41, 43], "robust": [1, 5, 7, 11, 13, 15, 18, 19, 40, 41, 43, 44], "nn": [1, 4, 5, 6, 15, 17, 18, 19, 30, 42, 43], "metric": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 22, 24, 25, 27, 35, 37, 39, 42, 43, 46, 47, 48], "space": [1, 4, 5, 6, 7, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 24, 25, 37, 39, 40, 42, 43, 44, 46, 48], "int": [1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 25, 27, 42, 43, 44, 46, 47], "number": [1, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 27, 31, 37, 42, 43, 44, 46, 47], "updat": [1, 4, 5, 15, 17, 18, 19, 35, 42, 43], "step": [1, 4, 5, 6, 15, 17, 18, 19, 42, 43, 48], "should": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 22, 27, 31, 37, 39, 40, 43, 44, 47], "perform": [1, 4, 5, 7, 11, 15, 17, 18, 19, 42, 43, 44], "find": [1, 4, 5, 6, 7, 13, 15, 17, 18, 19, 42, 43, 44], "learn": [1, 4, 5, 6, 7, 10, 13, 15, 17, 18, 19, 27, 40, 41, 42, 43, 44, 47, 48], "rate": [1, 4, 5, 6, 15, 17, 18, 19, 42, 43], "audit_threshold": [1, 4, 5, 43], "pytorch": [1, 4, 5, 6, 27, 31, 40, 43, 47, 48], "b": [1, 4, 5, 7, 9, 11, 13, 14, 20, 25, 29, 43, 44, 46], "consid": [1, 4, 5, 7, 9, 10, 20, 25, 40, 43, 44, 46], "sgd": [1, 4, 5, 7, 10, 43, 44], "audit_respons": [1, 4, 5, 43], "respons": [1, 4, 5, 43], "contain": [1, 4, 5, 6, 7, 8, 10, 13, 20, 25, 32, 37, 43, 44, 46, 47, 48], "test": [1, 4, 5, 15, 17, 18, 19, 39, 42, 43], "y": [1, 4, 5, 7, 8, 9, 10, 15, 17, 18, 19, 20, 21, 22, 25, 27, 32, 37, 40, 42, 43, 44, 46, 47, 48], "datapoint": [1, 4, 5, 20, 21, 22, 32, 43, 46, 47], "output": [1, 4, 5, 6, 15, 17, 18, 19, 20, 21, 22, 25, 32, 40, 42, 43, 46, 47, 48], "provid": [1, 4, 5, 6, 7, 11, 13, 20, 25, 27, 31, 43, 44, 46, 47], "distance_i": [1, 4, 6, 15, 17, 19, 42, 43, 48], "problem": [1, 6, 7, 14, 43, 44], "q": [1, 6, 15, 19, 42, 43], "h_": [1, 4, 6, 43], "theta_t": [1, 4, 6, 43], "_": [1, 6, 7, 10, 43, 44], "lambda_t": [1, 4, 6, 43], "d_": [1, 4, 6, 43], "At": [1, 6, 40, 43], "high": [1, 6, 43], "level": [1, 6, 43], "maxim": [1, 6, 43], "score": [1, 6, 31, 43], "differ": [1, 6, 7, 12, 31, 37, 39, 43, 44, 48], "while": [1, 6, 7, 9, 11, 20, 25, 31, 43, 44, 46], "keep": [1, 6, 7, 10, 11, 13, 43, 44], "set": [1, 4, 6, 7, 10, 11, 13, 14, 15, 17, 20, 21, 25, 27, 40, 41, 43, 44, 46, 47], "distance_q": [1, 6, 43], "queri": [1, 6, 43], "small": [1, 6, 7, 11, 43, 44], "rank": [1, 6, 7, 14, 15, 19, 29, 39, 40, 41, 43, 44], "an": [1, 6, 7, 10, 11, 12, 13, 14, 20, 25, 31, 37, 39, 40, 43, 44, 46], "instanc": [1, 6, 31, 43], "taken": [1, 6, 31, 43], "produc": [1, 6, 43], "rang": [1, 6, 43, 48], "uniform": [1, 6, 43], "distribut": [1, 6, 29, 31, 43], "nois": [1, 6, 43], "ad": [1, 6, 43], "form": [1, 6, 7, 10, 11, 43, 44], "dimens": [1, 6, 7, 12, 13, 14, 22, 29, 31, 37, 39, 43, 44], "batch_siz": [1, 6, 31, 43], "num_item": [1, 6, 43], "num_featur": [1, 6, 43], "per": [1, 6, 43], "item": [1, 6, 7, 12, 14, 35, 37, 43, 44], "q_worst": [1, 6, 43], "invari": [1, 4, 15, 17, 40, 41, 43], "enforc": [1, 4, 7, 8, 15, 17, 37, 41, 42, 43], "adam": [1, 4, 43], "bool": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 32, 33, 37, 44, 46, 47], "store": [3, 15, 16, 20, 21, 23, 24, 46], "from": [3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 20, 23, 25, 27, 31, 37, 39, 40, 41, 44, 46, 47, 48], "learnabl": [7, 8, 37], "do": [7, 8, 37], "noth": [7, 8, 37], "subclass": [7, 8, 9, 31, 37, 44], "overwrit": [7, 8, 37], "thi": [7, 8, 9, 11, 12, 14, 20, 21, 22, 25, 29, 31, 37, 39, 40, 44, 46], "method": [7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 25, 31, 35, 37, 42, 44, 46], "custom": [7, 8, 37], "logic": [7, 8, 37], "must": [7, 8, 9, 37, 44], "overrid": [7, 8, 9, 31, 37, 44], "particular": [7, 8, 9, 12, 29, 37, 44, 48], "two": [7, 8, 9, 10, 12, 20, 25, 27, 32, 37, 41, 44, 46, 47], "state_dict": [7, 8, 37], "strict": [7, 8, 37], "true": [7, 8, 9, 10, 11, 12, 13, 20, 21, 25, 27, 28, 33, 37, 44, 46, 47], "copi": [7, 8, 37], "buffer": [7, 8, 37], "its": [7, 8, 20, 21, 24, 37, 40, 46], "descend": [7, 8, 37], "kei": [7, 8, 37, 40], "exactli": [7, 8, 37], "match": [7, 8, 31, 37], "": [7, 8, 29, 31, 37], "dict": [7, 8, 23, 37], "persist": [7, 8, 37], "whether": [7, 8, 10, 20, 25, 32, 37, 44, 46, 47], "strictli": [7, 8, 37], "missing_kei": [7, 8, 37], "str": [7, 8, 20, 25, 27, 37, 46, 47], "miss": [7, 8, 37], "unexpected_kei": [7, 8, 37], "unexpect": [7, 8, 37], "namedtupl": [7, 8, 37], "field": [7, 8, 37, 48], "regist": [7, 8, 37], "correspond": [7, 8, 10, 11, 29, 37, 44], "exist": [7, 8, 22, 31, 37], "rais": [7, 8, 11, 37, 44], "runtimeerror": [7, 8, 37], "embed": [7, 10, 39, 40], "xenial": [7, 10, 40], "pair": [7, 10, 12, 14, 27, 35, 37, 40, 47], "logist": [7, 10, 11, 35, 40], "regress": [7, 10, 11, 20, 21, 25, 35, 40, 46], "explor": [7, 10, 27, 40, 47], "section": [7, 10, 13, 20, 25, 44, 46], "simpl": [7, 10, 41, 44], "wai": [7, 10, 41, 44], "x_1": [7, 10, 11, 12, 37, 40, 44], "x_2": [7, 10, 11, 12, 37, 40, 44], "langl": [7, 10, 44], "phi": [7, 10, 44], "sigma": [7, 10, 12, 37, 44], "rangl": [7, 10, 44], "where": [7, 10, 11, 12, 13, 14, 20, 21, 25, 29, 37, 40, 44, 46], "map": [7, 10, 44], "semi": [7, 10, 44], "posit": [7, 10, 44], "definit": [7, 10, 44], "matrix": [7, 9, 10, 11, 12, 20, 21, 24, 25, 32, 37, 44, 46, 47], "The": [7, 9, 10, 11, 13, 31, 32, 37, 40, 44, 47, 48], "expect": [7, 10, 15, 17, 18, 19, 42, 44], "triplet": [7, 10, 44], "i_1": [7, 10, 44], "i_2": [7, 10, 44], "y_i": [7, 10, 11, 44], "n": [7, 10, 13, 14, 20, 21, 22, 25, 29, 31, 32, 44, 46, 47], "indic": [7, 9, 10, 11, 20, 25, 27, 32, 35, 44, 46, 47], "human": [7, 10, 44], "compar": [7, 10, 13, 27, 44, 47], "refer": [7, 10, 11, 13, 14, 15, 19, 20, 25, 27, 29, 42, 44, 46, 47], "mukherje": [7, 10, 41, 44], "debarghya": [7, 10, 41, 44], "mikhail": [7, 10, 11, 13, 14, 41, 44], "yurochkin": [7, 10, 11, 13, 14, 41, 44], "moulinath": [7, 10, 44], "banerje": [7, 10, 44], "yuekai": [7, 10, 11, 13, 14, 41, 44], "sun": [7, 10, 11, 13, 14, 41, 44], "In": [7, 10, 12, 37, 41, 44], "intern": [7, 10, 41, 44], "confer": [7, 10, 41, 44], "machin": [7, 10, 40, 41, 44], "pp": [7, 10, 44], "7097": [7, 10, 44], "7107": [7, 10, 44], "pmlr": [7, 10, 41, 44], "2020": [7, 10, 41, 44], "iter": [7, 9, 10, 11, 27, 44, 47], "batchsiz": [7, 10, 20, 25, 44, 46], "x1": [7, 10, 12, 14, 37, 44], "x2": [7, 10, 12, 14, 37, 44], "autoinfer_devic": [7, 10, 11, 13, 44], "first": [7, 10, 22, 31, 44, 48], "second": [7, 10, 44], "vector": [7, 10, 13, 29, 31, 37, 44], "element": [7, 10, 29, 31, 44], "ar": [7, 10, 11, 14, 20, 21, 25, 27, 31, 32, 40, 44, 46, 47], "size": [7, 10, 14, 20, 25, 29, 31, 44, 46], "each": [7, 10, 11, 14, 29, 31, 44], "automat": [7, 10, 11, 13, 28, 44], "move": [7, 9, 10, 11, 12, 13, 37, 44], "appropri": [7, 10, 11, 13, 20, 25, 44, 46], "devic": [7, 9, 10, 11, 12, 13, 27, 37, 44, 47], "cpu": [7, 10, 11, 13, 27, 44, 47], "gpu": [7, 10, 11, 13, 44], "same": [7, 10, 11, 12, 13, 22, 27, 37, 44, 47], "fals": [7, 10, 11, 12, 13, 20, 21, 25, 27, 28, 32, 33, 37, 44, 46, 47], "itemwise_dist": [7, 9, 12, 37, 44], "softmax": [7, 11, 44], "appendix": [7, 11, 44], "paper": [7, 11, 20, 25, 40, 44, 46], "assum": [7, 11, 44], "attribut": [7, 9, 11, 31, 35, 39, 44], "discret": [7, 11, 44], "observ": [7, 11, 44], "subset": [7, 11, 44], "x_i": [7, 11, 44], "k_i": [7, 11, 44], "th": [7, 11, 44], "subject": [7, 11, 44], "mathbb": [7, 11, 20, 25, 44, 46], "p": [7, 11, 13, 28, 37, 44], "mid": [7, 11, 44], "frac": [7, 11, 44], "exp": [7, 11, 44], "a_l": [7, 11, 44], "tx_i": [7, 11, 44], "b_l": [7, 11, 44], "sum_": [7, 11, 44], "k": [7, 11, 13, 31, 37, 44], "ldot": [7, 11, 44], "span": [7, 11, 44], "A": [7, 11, 13, 20, 21, 27, 37, 44, 46, 47], "a_1": [7, 11, 44], "cdot": [7, 11, 13, 44], "a_k": [7, 11, 44], "t": [7, 11, 12, 13, 37, 44], "p_": [7, 11, 44], "text": [7, 11, 12, 37, 44], "ran": [7, 11, 44], "amanda": [7, 11, 13, 14, 41, 44], "bower": [7, 11, 13, 14, 41, 44], "arxiv": [7, 11, 13, 44], "preprint": [7, 11, 13, 44], "1907": [7, 11, 13, 44], "00020": [7, 11, 13, 44], "2019": [7, 11, 13, 41, 44], "x_train": [7, 11, 13, 44, 48], "y_train": [7, 11, 44], "protected_idx": [7, 11, 44], "keep_protected_idx": [7, 11, 44], "data_x": [7, 11, 24, 44], "data_sensitiveattr": [7, 11, 44], "either": [7, 11, 44], "variabl": [7, 11, 13, 44], "repres": [7, 11, 14, 44], "when": [7, 11, 20, 25, 31, 44, 46], "note": [7, 11, 44], "mutual": [7, 11, 44], "exclus": [7, 11, 44], "specififi": [7, 11, 44], "both": [7, 11, 44], "error": [7, 11, 44], "keep_protected_indic": [7, 11, 44], "protect": [7, 9, 11, 13, 37, 39, 40], "part": [7, 11, 20, 25, 44, 46], "exclud": [7, 11, 27, 44, 47], "properti": [7, 11, 20, 21, 22, 44, 46], "predict": [7, 11, 32, 39, 40, 44, 47], "can": [7, 11, 12, 13, 37, 40, 44, 48], "measur": [7, 11, 44], "mahalanobi": [7, 12, 14, 40], "point": [7, 9, 12, 20, 21, 22, 24, 25, 32, 37, 44, 46, 47], "dist": [7, 12, 14, 32, 37, 44, 47], "covari": [7, 12, 37, 44], "n_samples_1": [7, 12, 37, 44], "n_samples_2": [7, 12, 37, 44], "itemwis": [7, 12, 37, 44], "manner": [7, 12, 37, 44], "pairwis": [7, 12, 14, 37, 44], "fashion": [7, 12, 37, 44], "ith": [7, 12, 37, 44], "thu": [7, 12, 37, 44], "all": [7, 12, 22, 27, 37, 44, 47], "wise": [7, 12, 35, 37, 44], "protected_attribut": [7, 9, 44], "num_attribut": [7, 9, 44], "euclidean": [7, 9, 12, 20, 21, 25, 40, 46], "would": [7, 9, 29, 44, 48], "ignor": [7, 9, 13, 37, 44], "total": [7, 9, 44], "d": [7, 9, 13, 14, 37, 44], "matric": [7, 9, 44], "camput": [7, 9, 44], "svd": [7, 13, 40], "basi": [7, 13, 37, 44], "curat": [7, 13, 44], "n_compon": [7, 13, 44, 48], "onli": [7, 13, 14, 44], "one": [7, 13, 32, 39, 44, 47, 48], "For": [7, 13, 40, 44], "multipl": [7, 13, 44], "n_1": [7, 13, 27, 44, 47], "n_x": [7, 13, 44], "desir": [7, 13, 31, 44], "latent": [7, 13, 44], "project": [7, 13, 37, 44], "basis_vector": [7, 13, 37, 44], "complement": [7, 13, 37, 44], "featur": [7, 13, 14, 37, 44], "describ": [7, 13, 37, 44], "squar": [7, 12], "special": [7, 12], "i_": [7, 12], "num_dim": [7, 12], "which": [7, 12, 20, 24, 25, 27, 32, 40, 46, 47], "wasserstein": [7, 14, 40], "m": [7, 14, 31, 44], "current": [7, 14, 40, 44], "support": [7, 14, 26, 31, 40, 44], "inherit": [7, 14, 44], "transform": [7, 14, 44], "so": [7, 14, 29, 40, 44], "becom": [7, 14, 44], "differenti": [7, 14, 44], "underli": [7, 14, 44], "cost": [7, 14, 44], "transport": [7, 14, 40, 44], "more": [7, 14, 20, 25, 29, 44, 46], "inform": [7, 14, 29, 41, 44], "see": [7, 14, 15, 19, 20, 25, 42, 44, 46], "5": [7, 14, 44], "bellow": [7, 14, 44], "hamid": [7, 14, 41, 44], "eftekhari": [7, 14, 41, 44], "iclr": [7, 14, 44], "2021": [7, 14, 41, 44], "impli": [7, 14, 20, 21, 25, 44, 46], "fairmodel": [15, 16], "algorithm": [15, 16, 17, 18, 19, 20, 23, 25, 35, 39, 45, 46, 48], "ep": [15, 17, 18, 19, 42, 48], "lr_lamb": [15, 18, 42], "lr_param": [15, 18, 42], "auditor_nstep": [15, 17, 18, 19, 42, 48], "auditor_lr": [15, 17, 18, 19, 42, 48], "architectur": [15, 17, 18, 19, 42], "epsilon": [15, 17, 18, 19, 42], "alpha": [15, 18, 42], "everi": [15, 17, 18, 19, 42], "call": [15, 17, 18, 19, 31, 42], "dure": [15, 17, 18, 19, 42], "phase": [15, 17, 18, 19, 42], "rho": [15, 17, 19, 42, 48], "monte_carlo_samples_ndcg": [15, 19, 42], "mont": [15, 19, 29, 42], "carlo": [15, 19, 29, 42], "requir": [15, 19, 20, 25, 35, 40, 42, 46], "estim": [15, 19, 42], "empir": [15, 19, 42], "version": [15, 19, 40, 42], "relev": [15, 19, 29, 42, 48], "invarian": [15, 17, 42], "add_datapoints_x": [20, 22], "add_datapoints_i": [20, 22], "reset": [20, 21, 22, 24, 46], "y_solut": [20, 23, 25, 46], "build_distance_matrix": [20, 24], "is_output_proba": [20, 21, 25, 46], "post": [20, 21, 22, 23, 25, 32, 35, 39, 45], "process": [20, 21, 22, 23, 25, 28, 32, 35, 39, 45], "data_i": [20, 21, 25, 46], "probabl": [20, 21, 25, 31, 32, 46, 47], "classif": [20, 21, 25, 46], "add": [20, 21, 22, 29, 31, 46], "new": [20, 21, 22, 31, 38, 46], "tupl": [20, 21, 46], "back": [20, 21, 22, 24, 27, 46, 47], "state": [20, 21, 22, 24, 40, 46], "graph": [20, 25, 35, 40], "laplacian": [20, 25, 32, 35, 40, 47], "scale": [20, 25, 32, 46, 47], "w_graph": [20, 25, 46], "idx": [20, 25, 27, 46, 47], "widehat": [20, 25, 46], "mathbf": [20, 25, 46], "f": [20, 25, 32, 46, 47], "min_": [20, 25, 46], "hat": [20, 25, 32, 46, 47], "_2": [20, 25, 46], "top": [20, 25, 46], "l_n": [20, 25, 46], "3": [20, 25, 31, 46, 48], "solut": [20, 25, 32, 46, 47], "c": [20, 25, 46], "regular": [20, 25, 32, 46, 47], "construct": [20, 25, 27, 46, 47], "below": [20, 25, 32, 46, 47], "connect": [20, 25, 32, 46, 47], "edg": [20, 25, 46], "beyond": [20, 25, 32, 46, 47], "disconnect": [20, 25, 32, 46, 47], "adjac": [20, 25, 32, 46, 47], "includ": [20, 25, 27, 32, 36, 46, 47], "explan": [20, 25, 46], "variou": [20, 25, 46, 48], "epoch": [20, 25, 46, 48], "possibl": [20, 25, 46], "coordin": [20, 25, 35, 46], "descent": [20, 25, 35, 46], "suitabl": [20, 25, 46], "larg": [20, 25, 46], "minibatch": [20, 25, 46], "exact": [20, 25, 46], "strucutur": 22, "hold": 22, "have": [22, 31], "previou": 22, "along": 22, "except": 22, "structur": [22, 24], "invok": 22, "oper": [22, 31], "remov": 22, "track": 24, "build": [24, 32, 47], "arg_constraint": [26, 31], "expand": [26, 31], "log_prob": [26, 31], "convert": [27, 47], "arrai": [27, 47], "modif": [27, 47], "array_np": [27, 47], "n_pair": [27, 47], "datasamples_1": [27, 47], "datasamples_2": [27, 47], "creat": [27, 31, 47], "dataset": [27, 47], "incompar": [27, 47], "n_2": [27, 47], "within": [27, 47], "thei": [27, 47], "random": [27, 47], "togeth": [27, 47], "obj": [27, 47], "cuda": [27, 47], "data_term": [27, 47], "term": [27, 47], "depend": [27, 47], "string": [27, 47], "filter": [27, 47], "alphabet": [27, 47], "order": [27, 29, 47], "func": 28, "assign": [28, 31], "def": 28, "__init__": [28, 31], "self": 28, "cmd": 28, "reachabl": 28, "root": 28, "pass": 28, "halt": 28, "take": [29, 40], "discount": 29, "cumul": 29, "gain": 29, "wikipedia": 29, "http": [29, 31, 40], "en": 29, "org": 29, "wiki": 29, "some": 29, "scalar": 29, "further": 29, "outer": 29, "work": 29, "plackett": [29, 31], "luce": [29, 31], "freez": 30, "unfreez": 30, "file": [31, 39], "github": [31, 40], "pr": 31, "50362": 31, "url": 31, "com": [31, 40], "pull": 31, "author": 31, "jeremi": 31, "salwen": 31, "jeremysalwen": 31, "logit": 31, "permutation_s": 31, "validate_arg": 31, "over": 31, "permut": 31, "parameter": 31, "attr": 31, "a_i": 31, "repeatedli": 31, "choos": 31, "next": 31, "remain": 31, "proport": 31, "dimension": [31, 39], "length": 31, "log": 31, "index": 31, "treat": [31, 40], "entri": 31, "through": 31, "remaind": 31, "unspecifi": 31, "dtype": 31, "int64": 31, "last": 31, "strip": 31, "real": 31, "batch_shap": 31, "_instanc": 31, "popul": 31, "deriv": 31, "As": 31, "doe": 31, "alloc": 31, "memori": 31, "addition": 31, "repeat": 31, "ani": [31, 32, 47], "check": [31, 33], "broadcast": 31, "py": 31, "need": [31, 48], "densiti": 31, "mass": 31, "evalu": 31, "sample_shap": 31, "integerinterv": 31, "upper_bound": 31, "9223372036854775807": 31, "w": [32, 47], "adjanc": [32, 47], "It": [32, 47], "atleast": [32, 47], "other": [32, 47], "isol": [32, 47], "ones": [32, 47], "idxs_in": [32, 47], "y_hat": [32, 47], "system": [32, 41, 47], "linear": [32, 47], "accord": [32, 47], "binari": 33, "np": 33, "validata": 33, "is_binari": 33, "packag": [34, 35, 36, 46, 48], "subpackag": 34, "modul": [34, 37, 42, 43, 48], "content": 34, "bug": 35, "resolv": 35, "separ": 35, "compat": 35, "aif360": 35, "releas": 35, "infair": [36, 37, 42, 43, 44, 46, 47, 48], "how": [38, 48], "integr": 38, "algo": 38, "etc": 38, "code": [38, 40], "task": 39, "jupyt": 39, "link": 39, "binder": 39, "adult": 39, "incom": 39, "person": 39, "make": 39, "50000": 39, "across": 39, "gender": 39, "sentiment": 39, "analysi": 39, "sentenc": 39, "name": 39, "ethnic": 39, "synthet": 39, "classifi": 39, "randomli": 39, "explicitli": 39, "word": 39, "associ": 39, "reduc": 39, "bia": 39, "replac": 39, "pre": [39, 40], "distilbert": 39, "huggingfac": 39, "templat": 39, "movi": 39, "wa": 39, "countri": 39, "intuit": 40, "similar": 40, "similarli": 40, "formal": 40, "lead": 40, "notion": 40, "dwork": 40, "et": [40, 41], "al": [40, 41], "2011": 40, "d_y": 40, "leq": 40, "quad": 40, "foral": 40, "here": 40, "rightarrow": 40, "geq": 40, "lipchitz": 40, "constant": 40, "constrain": 40, "upper": 40, "encod": 40, "our": 40, "design": 40, "we": [40, 48], "ensur": 40, "well": 40, "core": 40, "librari": 40, "compon": 40, "pipelin": 40, "depth": 40, "tutori": 40, "pleas": 40, "watch": 40, "look": 40, "folder": [40, 48], "illustr": [40, 48], "pip": 40, "altern": 40, "you": [40, 48], "wish": 40, "latest": 40, "develop": 40, "directli": 40, "clone": 40, "repositori": 40, "repo": 40, "git": 40, "ibm": 40, "cd": 40, "doc": 40, "minim": 40, "changelog": 40, "2022": 40, "08": 40, "09": 40, "06": 40, "10": 40, "represent": 41, "maiti": 41, "subha": 41, "songkai": 41, "xue": 41, "infer": 41, "petersen": 41, "felix": 41, "advanc": 41, "neural": [41, 48], "34": 41, "25944": 41, "25955": 41, "import": 48, "being": 48, "thereaft": 48, "instanti": 48, "50": 48, "final": 48, "lossfn": 48, "1e": 48, "01": 48, "100": 48, "your": 48, "standard": 48, "deep": 48, "train_dl": 48, "zero_grad": 48, "backward": 48}, "objects": {"": [[0, 0, 0, "-", "inFairness"]], "inFairness": [[1, 0, 0, "-", "auditor"], [7, 0, 0, "-", "distances"], [15, 0, 0, "-", "fairalgo"], [20, 0, 0, "-", "postprocessing"], [26, 0, 0, "-", "utils"]], "inFairness.auditor": [[36, 1, 1, "", "Auditor"], [43, 1, 1, "", "SenSRAuditor"], [43, 1, 1, "", "SenSTIRAuditor"], [43, 1, 1, "", "SenSeIAuditor"], [2, 0, 0, "-", "auditor"], [3, 0, 0, "-", "datainterface"], [4, 0, 0, "-", "sensei_auditor"], [5, 0, 0, "-", "sensr_auditor"], [6, 0, 0, "-", "senstir_auditor"]], "inFairness.auditor.Auditor": [[36, 2, 1, "", "audit"], [36, 2, 1, "", "compute_audit_result"], [36, 2, 1, "", "compute_loss_ratio"], [36, 2, 1, "", "generate_worst_case_examples"]], "inFairness.auditor.SenSRAuditor": [[43, 2, 1, "", "audit"], [43, 2, 1, "", "generate_worst_case_examples"]], "inFairness.auditor.SenSTIRAuditor": [[43, 2, 1, "", "generate_worst_case_examples"]], "inFairness.auditor.SenSeIAuditor": [[43, 2, 1, "", "audit"], [43, 2, 1, "", "generate_worst_case_examples"]], "inFairness.auditor.auditor": [[2, 1, 1, "", "Auditor"]], "inFairness.auditor.auditor.Auditor": [[2, 2, 1, "", "audit"], [2, 2, 1, "", "compute_audit_result"], [2, 2, 1, "", "compute_loss_ratio"], [2, 2, 1, "", "generate_worst_case_examples"]], "inFairness.auditor.datainterface": [[3, 1, 1, "", "AuditorResponse"]], "inFairness.auditor.datainterface.AuditorResponse": [[3, 3, 1, "", "confidence"], [3, 3, 1, "", "is_model_fair"], [3, 3, 1, "", "lossratio_mean"], [3, 3, 1, "", "lossratio_std"], [3, 3, 1, "", "lower_bound"], [3, 3, 1, "", "pval"], [3, 3, 1, "", "threshold"]], "inFairness.auditor.sensei_auditor": [[4, 1, 1, "", "SenSeIAuditor"]], "inFairness.auditor.sensei_auditor.SenSeIAuditor": [[4, 2, 1, "", "audit"], [4, 2, 1, "", "generate_worst_case_examples"]], "inFairness.auditor.sensr_auditor": [[5, 1, 1, "", "SenSRAuditor"]], "inFairness.auditor.sensr_auditor.SenSRAuditor": [[5, 2, 1, "", "audit"], [5, 2, 1, "", "generate_worst_case_examples"]], "inFairness.auditor.senstir_auditor": [[6, 1, 1, "", "SenSTIRAuditor"]], "inFairness.auditor.senstir_auditor.SenSTIRAuditor": [[6, 2, 1, "", "generate_worst_case_examples"]], "inFairness.distances": [[7, 1, 1, "", "Distance"], [44, 1, 1, "", "EXPLOREDistance"], [44, 1, 1, "", "EuclideanDistance"], [44, 1, 1, "", "LogisticRegSensitiveSubspace"], [44, 1, 1, "", "MahalanobisDistances"], [44, 1, 1, "", "ProtectedEuclideanDistance"], [44, 1, 1, "", "SVDSensitiveSubspaceDistance"], [44, 1, 1, "", "SensitiveSubspaceDistance"], [7, 1, 1, "", "SquaredEuclideanDistance"], [44, 1, 1, "", "WassersteinDistance"], [8, 0, 0, "-", "distance"], [9, 0, 0, "-", "euclidean_dists"], [10, 0, 0, "-", "explore_distance"], [11, 0, 0, "-", "logistic_sensitive_subspace"], [12, 0, 0, "-", "mahalanobis_distance"], [13, 0, 0, "-", "sensitive_subspace_dist"], [14, 0, 0, "-", "wasserstein_distance"]], "inFairness.distances.Distance": [[7, 2, 1, "", "fit"], [7, 2, 1, "", "forward"], [7, 2, 1, "", "load_state_dict"], [7, 3, 1, "", "training"]], "inFairness.distances.EXPLOREDistance": [[7, 2, 1, "", "compute_sigma"], [44, 2, 1, "", "fit"], [7, 3, 1, "", "training"]], "inFairness.distances.EuclideanDistance": [[44, 2, 1, "", "forward"], [7, 3, 1, "", "training"]], "inFairness.distances.LogisticRegSensitiveSubspace": [[7, 2, 1, "", "compute_basis_vectors_data"], [7, 2, 1, "", "compute_basis_vectors_protected_idxs"], [44, 2, 1, "", "fit"], [44, 4, 1, "", "logistic_regression_models"], [7, 3, 1, "", "training"]], "inFairness.distances.MahalanobisDistances": [[44, 2, 1, "", "fit"], [44, 2, 1, "", "forward"], [44, 2, 1, "", "to"], [7, 3, 1, "", "training"]], "inFairness.distances.ProtectedEuclideanDistance": [[44, 2, 1, "", "fit"], [44, 2, 1, "", "forward"], [44, 2, 1, "", "to"], [7, 3, 1, "", "training"]], "inFairness.distances.SVDSensitiveSubspaceDistance": [[44, 2, 1, "", "compute_basis_vectors"], [44, 2, 1, "", "fit"], [7, 3, 1, "", "training"]], "inFairness.distances.SensitiveSubspaceDistance": [[44, 2, 1, "", "compute_projection_complement"], [44, 2, 1, "", "fit"], [7, 3, 1, "", "training"]], "inFairness.distances.SquaredEuclideanDistance": [[7, 2, 1, "", "fit"], [7, 3, 1, "", "training"]], "inFairness.distances.WassersteinDistance": [[44, 2, 1, "", "forward"], [7, 3, 1, "", "training"]], "inFairness.distances.distance": [[37, 1, 1, "", "Distance"]], "inFairness.distances.distance.Distance": [[37, 2, 1, "", "fit"], [37, 2, 1, "", "forward"], [37, 2, 1, "", "load_state_dict"], [8, 3, 1, "", "training"]], "inFairness.distances.euclidean_dists": [[9, 1, 1, "", "EuclideanDistance"], [9, 1, 1, "", "ProtectedEuclideanDistance"]], "inFairness.distances.euclidean_dists.EuclideanDistance": [[9, 2, 1, "", "forward"], [9, 3, 1, "", "training"]], "inFairness.distances.euclidean_dists.ProtectedEuclideanDistance": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "forward"], [9, 2, 1, "", "to"], [9, 3, 1, "", "training"]], "inFairness.distances.explore_distance": [[10, 1, 1, "", "EXPLOREDistance"]], "inFairness.distances.explore_distance.EXPLOREDistance": [[10, 2, 1, "", "compute_sigma"], [10, 2, 1, "", "fit"], [10, 3, 1, "", "training"]], "inFairness.distances.logistic_sensitive_subspace": [[11, 1, 1, "", "LogisticRegSensitiveSubspace"]], "inFairness.distances.logistic_sensitive_subspace.LogisticRegSensitiveSubspace": [[11, 2, 1, "", "compute_basis_vectors_data"], [11, 2, 1, "", "compute_basis_vectors_protected_idxs"], [11, 2, 1, "", "fit"], [11, 4, 1, "", "logistic_regression_models"], [11, 3, 1, "", "training"]], "inFairness.distances.mahalanobis_distance": [[12, 1, 1, "", "MahalanobisDistances"], [12, 1, 1, "", "SquaredEuclideanDistance"]], "inFairness.distances.mahalanobis_distance.MahalanobisDistances": [[12, 2, 1, "", "fit"], [12, 2, 1, "", "forward"], [12, 2, 1, "", "to"], [12, 3, 1, "", "training"]], "inFairness.distances.mahalanobis_distance.SquaredEuclideanDistance": [[12, 2, 1, "", "fit"], [12, 3, 1, "", "training"]], "inFairness.distances.sensitive_subspace_dist": [[13, 1, 1, "", "SVDSensitiveSubspaceDistance"], [13, 1, 1, "", "SensitiveSubspaceDistance"]], "inFairness.distances.sensitive_subspace_dist.SVDSensitiveSubspaceDistance": [[13, 2, 1, "", "compute_basis_vectors"], [13, 2, 1, "", "fit"], [13, 3, 1, "", "training"]], "inFairness.distances.sensitive_subspace_dist.SensitiveSubspaceDistance": [[13, 2, 1, "", "compute_projection_complement"], [13, 2, 1, "", "fit"], [13, 3, 1, "", "training"]], "inFairness.distances.wasserstein_distance": [[14, 1, 1, "", "WassersteinDistance"]], "inFairness.distances.wasserstein_distance.WassersteinDistance": [[14, 2, 1, "", "forward"], [14, 3, 1, "", "training"]], "inFairness.fairalgo": [[15, 1, 1, "", "FairModelResponse"], [42, 1, 1, "", "SenSR"], [42, 1, 1, "", "SenSTIR"], [42, 1, 1, "", "SenSeI"], [16, 0, 0, "-", "datainterfaces"], [17, 0, 0, "-", "sensei"], [18, 0, 0, "-", "sensr"], [19, 0, 0, "-", "senstir"]], "inFairness.fairalgo.FairModelResponse": [[15, 3, 1, "", "loss"], [15, 3, 1, "", "y_pred"]], "inFairness.fairalgo.SenSR": [[42, 2, 1, "", "forward"], [42, 2, 1, "", "forward_test"], [42, 2, 1, "", "forward_train"], [15, 3, 1, "", "training"]], "inFairness.fairalgo.SenSTIR": [[42, 2, 1, "", "forward"], [42, 2, 1, "", "forward_test"], [15, 2, 1, "", "forward_train"], [15, 3, 1, "", "training"]], "inFairness.fairalgo.SenSeI": [[42, 2, 1, "", "forward"], [42, 2, 1, "", "forward_test"], [42, 2, 1, "", "forward_train"], [15, 3, 1, "", "training"]], "inFairness.fairalgo.datainterfaces": [[16, 1, 1, "", "FairModelResponse"]], "inFairness.fairalgo.datainterfaces.FairModelResponse": [[16, 3, 1, "", "loss"], [16, 3, 1, "", "y_pred"]], "inFairness.fairalgo.sensei": [[17, 1, 1, "", "SenSeI"]], "inFairness.fairalgo.sensei.SenSeI": [[17, 2, 1, "", "forward"], [17, 2, 1, "", "forward_test"], [17, 2, 1, "", "forward_train"], [17, 3, 1, "", "training"]], "inFairness.fairalgo.sensr": [[18, 1, 1, "", "SenSR"]], "inFairness.fairalgo.sensr.SenSR": [[18, 2, 1, "", "forward"], [18, 2, 1, "", "forward_test"], [18, 2, 1, "", "forward_train"], [18, 3, 1, "", "training"]], "inFairness.fairalgo.senstir": [[19, 1, 1, "", "SenSTIR"]], "inFairness.fairalgo.senstir.SenSTIR": [[19, 2, 1, "", "forward"], [19, 2, 1, "", "forward_test"], [19, 2, 1, "", "forward_train"], [19, 3, 1, "", "training"]], "inFairness.postprocessing": [[46, 1, 1, "", "BasePostProcessing"], [46, 1, 1, "", "GraphLaplacianIF"], [21, 0, 0, "-", "base_postprocessing"], [22, 0, 0, "-", "data_ds"], [23, 0, 0, "-", "datainterfaces"], [24, 0, 0, "-", "distance_ds"], [25, 0, 0, "-", "glif"]], "inFairness.postprocessing.BasePostProcessing": [[46, 2, 1, "", "add_datapoints"], [46, 4, 1, "", "data"], [46, 4, 1, "", "distance_matrix"], [20, 2, 1, "", "postprocess"], [46, 2, 1, "", "reset_datapoints"]], "inFairness.postprocessing.GraphLaplacianIF": [[46, 2, 1, "", "get_objective"], [46, 2, 1, "", "postprocess"]], "inFairness.postprocessing.base_postprocessing": [[21, 1, 1, "", "BasePostProcessing"]], "inFairness.postprocessing.base_postprocessing.BasePostProcessing": [[21, 2, 1, "", "add_datapoints"], [21, 4, 1, "", "data"], [21, 4, 1, "", "distance_matrix"], [21, 2, 1, "", "postprocess"], [21, 2, 1, "", "reset_datapoints"]], "inFairness.postprocessing.data_ds": [[22, 1, 1, "", "PostProcessingDataStore"]], "inFairness.postprocessing.data_ds.PostProcessingDataStore": [[22, 2, 1, "", "add_datapoints"], [22, 2, 1, "", "add_datapoints_X"], [22, 2, 1, "", "add_datapoints_Y"], [22, 4, 1, "", "distance_matrix"], [22, 2, 1, "", "reset"]], "inFairness.postprocessing.datainterfaces": [[23, 1, 1, "", "PostProcessingObjectiveResponse"]], "inFairness.postprocessing.datainterfaces.PostProcessingObjectiveResponse": [[23, 3, 1, "", "objective"], [23, 3, 1, "", "y_solution"]], "inFairness.postprocessing.distance_ds": [[24, 1, 1, "", "DistanceStructure"]], "inFairness.postprocessing.distance_ds.DistanceStructure": [[24, 2, 1, "", "build_distance_matrix"], [24, 2, 1, "", "reset"]], "inFairness.postprocessing.glif": [[25, 1, 1, "", "GraphLaplacianIF"]], "inFairness.postprocessing.glif.GraphLaplacianIF": [[25, 2, 1, "", "get_objective"], [25, 2, 1, "", "postprocess"]], "inFairness.utils": [[47, 0, 0, "-", "datautils"], [28, 0, 0, "-", "misc"], [29, 0, 0, "-", "ndcg"], [30, 0, 0, "-", "params"], [31, 0, 0, "-", "plackett_luce"], [47, 0, 0, "-", "postprocessing"], [33, 0, 0, "-", "validationutils"]], "inFairness.utils.datautils": [[47, 5, 1, "", "convert_tensor_to_numpy"], [47, 5, 1, "", "generate_data_pairs"], [47, 5, 1, "", "get_device"], [47, 5, 1, "", "include_exclude_terms"]], "inFairness.utils.misc": [[28, 5, 1, "", "initializer"]], "inFairness.utils.ndcg": [[29, 5, 1, "", "discounted_cumulative_gain"], [29, 5, 1, "", "monte_carlo_vect_ndcg"], [29, 5, 1, "", "normalized_discounted_cumulative_gain"], [29, 5, 1, "", "vect_normalized_discounted_cumulative_gain"]], "inFairness.utils.params": [[30, 5, 1, "", "freeze_network"], [30, 5, 1, "", "unfreeze_network"]], "inFairness.utils.plackett_luce": [[31, 1, 1, "", "PlackettLuce"]], "inFairness.utils.plackett_luce.PlackettLuce": [[31, 3, 1, "", "arg_constraints"], [31, 2, 1, "", "expand"], [31, 2, 1, "", "log_prob"], [31, 2, 1, "", "sample"], [31, 3, 1, "", "support"]], "inFairness.utils.postprocessing": [[47, 5, 1, "", "build_graph_from_dists"], [47, 5, 1, "", "get_laplacian"], [47, 5, 1, "", "laplacian_solve"]], "inFairness.utils.validationutils": [[33, 5, 1, "", "is_tensor_binary"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"infair": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40], "packag": [0, 1, 7, 15, 20, 26, 40], "subpackag": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "content": [0, 1, 7, 15, 20, 26], "auditor": [1, 2, 3, 4, 5, 6, 36, 40, 43], "submodul": [1, 7, 15, 20, 26], "datainterfac": [3, 16, 23], "sensei_auditor": 4, "sensr_auditor": 5, "senstir_auditor": 6, "distanc": [7, 8, 9, 10, 11, 12, 13, 14, 37, 44], "euclidean_dist": 9, "explore_dist": 10, "logistic_sensitive_subspac": 11, "mahalanobis_dist": 12, "sensitive_subspace_dist": 13, "wasserstein_dist": 14, "fairalgo": [15, 16, 17, 18, 19], "sensei": [17, 42, 43], "sensr": [18, 42, 43], "senstir": [19, 42, 43], "postprocess": [20, 21, 22, 23, 24, 25, 32], "base_postprocess": 21, "data_d": 22, "distance_d": 24, "glif": [25, 46], "util": [26, 27, 28, 29, 30, 31, 32, 33, 47], "datautil": 27, "misc": 28, "ndcg": 29, "param": 30, "plackett_luc": 31, "validationutil": 33, "changelog": 35, "2022": 35, "08": 35, "09": 35, "version": 35, "0": 35, "2": 35, "1": 35, "06": 35, "10": 35, "base": [37, 46], "class": [37, 46], "mahalanobi": [37, 44], "sensit": [37, 42, 44], "subspac": [37, 42, 44], "develop": 38, "exampl": [39, 48], "instal": 40, "featur": 40, "algorithm": [40, 41, 42], "metric": [40, 41, 44], "post": [40, 41, 46, 47], "process": [40, 41, 46, 47], "api": [40, 45], "document": [40, 45], "index": 40, "refer": 40, "paper": 41, "implement": 41, "audit": 41, "robust": 42, "set": 42, "invari": 42, "transport": 42, "rank": 42, "svd": 44, "explor": 44, "embed": 44, "xenial": 44, "pair": 44, "logist": 44, "regress": 44, "protect": 44, "euclidean": 44, "wasserstein": 44, "graph": 46, "laplacian": 46, "individu": 46, "fair": 46, "data": 47, "tutori": 48, "minim": 48}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"inFairness package": [[0, "infairness-package"]], "Subpackages": [[0, "subpackages"]], "Module contents": [[0, "module-inFairness"], [1, "module-inFairness.auditor"], [7, "module-inFairness.distances"], [15, "module-inFairness.fairalgo"], [20, "module-inFairness.postprocessing"], [26, "module-inFairness.utils"]], "inFairness.auditor package": [[1, "infairness-auditor-package"]], "Submodules": [[1, "submodules"], [7, "submodules"], [15, "submodules"], [20, "submodules"], [26, "submodules"]], "inFairness.auditor.auditor module": [[2, "module-inFairness.auditor.auditor"]], "inFairness.auditor.datainterface module": [[3, "module-inFairness.auditor.datainterface"]], "inFairness.auditor.sensei_auditor module": [[4, "module-inFairness.auditor.sensei_auditor"]], "inFairness.auditor.sensr_auditor module": [[5, "module-inFairness.auditor.sensr_auditor"]], "inFairness.auditor.senstir_auditor module": [[6, "module-inFairness.auditor.senstir_auditor"]], "inFairness.distances package": [[7, "infairness-distances-package"]], "inFairness.distances.distance module": [[8, "module-inFairness.distances.distance"]], "inFairness.distances.euclidean_dists module": [[9, "module-inFairness.distances.euclidean_dists"]], "inFairness.distances.explore_distance module": [[10, "module-inFairness.distances.explore_distance"]], "inFairness.distances.logistic_sensitive_subspace module": [[11, "module-inFairness.distances.logistic_sensitive_subspace"]], "inFairness.distances.mahalanobis_distance module": [[12, "module-inFairness.distances.mahalanobis_distance"]], "inFairness.distances.sensitive_subspace_dist module": [[13, "module-inFairness.distances.sensitive_subspace_dist"]], "inFairness.distances.wasserstein_distance module": [[14, "module-inFairness.distances.wasserstein_distance"]], "inFairness.fairalgo package": [[15, "infairness-fairalgo-package"]], "inFairness.fairalgo.datainterfaces module": [[16, "module-inFairness.fairalgo.datainterfaces"]], "inFairness.fairalgo.sensei module": [[17, "module-inFairness.fairalgo.sensei"]], "inFairness.fairalgo.sensr module": [[18, "module-inFairness.fairalgo.sensr"]], "inFairness.fairalgo.senstir module": [[19, "module-inFairness.fairalgo.senstir"]], "inFairness.postprocessing package": [[20, "infairness-postprocessing-package"]], "inFairness.postprocessing.base_postprocessing module": [[21, "module-inFairness.postprocessing.base_postprocessing"]], "inFairness.postprocessing.data_ds module": [[22, "module-inFairness.postprocessing.data_ds"]], "inFairness.postprocessing.datainterfaces module": [[23, "module-inFairness.postprocessing.datainterfaces"]], "inFairness.postprocessing.distance_ds module": [[24, "module-inFairness.postprocessing.distance_ds"]], "inFairness.postprocessing.glif module": [[25, "module-inFairness.postprocessing.glif"]], "inFairness.utils package": [[26, "infairness-utils-package"]], "inFairness.utils.datautils module": [[27, "module-inFairness.utils.datautils"]], "inFairness.utils.misc module": [[28, "module-inFairness.utils.misc"]], "inFairness.utils.ndcg module": [[29, "module-inFairness.utils.ndcg"]], "inFairness.utils.params module": [[30, "module-inFairness.utils.params"]], "inFairness.utils.plackett_luce module": [[31, "module-inFairness.utils.plackett_luce"]], "inFairness.utils.postprocessing module": [[32, "module-inFairness.utils.postprocessing"]], "inFairness.utils.validationutils module": [[33, "module-inFairness.utils.validationutils"]], "inFairness": [[34, "infairness"], [40, "infairness"]], "Changelog": [[35, "changelog"]], "2022-08-09: version 0.2.1": [[35, "version-0-2-1"]], "2022-08-06: version 0.2": [[35, "version-0-2"]], "2022-06-10: version 0.1": [[35, "version-0-1"]], "Auditors": [[36, "auditors"], [40, "auditors"], [43, "auditors"]], "Distances": [[37, "distances"], [44, "distances"]], "Distance base class": [[37, "distance-base-class"]], "Mahalanobis distance": [[37, "mahalanobis-distance"], [44, "mahalanobis-distance"]], "Sensitive Subspace distance": [[37, "sensitive-subspace-distance"], [44, "sensitive-subspace-distance"]], "Development": [[38, "development"]], "Examples": [[39, "examples"]], "Installation": [[40, "installation"]], "Features": [[40, "features"]], "Algorithms": [[40, "algorithms"], [41, "algorithms"], [42, "algorithms"]], "Metrics": [[40, "metrics"], [41, "metrics"]], "Post-Processing algorithms": [[40, "post-processing-algorithms"]], "API Documentation": [[40, "api-documentation"], [45, "api-documentation"]], "Index": [[40, null]], "Package Reference": [[40, null]], "Papers implemented": [[41, "papers-implemented"]], "Auditing": [[41, "auditing"]], "Post-processing": [[41, "post-processing"]], "SenSR: Sensitive Subspace Robustness": [[42, "sensr-sensitive-subspace-robustness"]], "SenSeI: Sensitive Set Invariance": [[42, "sensei-sensitive-set-invariance"]], "SenSTIR: Sensitive Set Transport Invariant Ranking": [[42, "senstir-sensitive-set-transport-invariant-ranking"]], "SenSR Auditor": [[43, "sensr-auditor"]], "SenSeI Auditor": [[43, "sensei-auditor"]], "SenSTIR Auditor": [[43, "senstir-auditor"]], "SVD Sensitive Subspace": [[44, "svd-sensitive-subspace"]], "EXPLORE: Embedded Xenial Pairs Logistic Regression": [[44, "explore-embedded-xenial-pairs-logistic-regression"]], "Logistic Regression Sensitive Subspace distance metric": [[44, "logistic-regression-sensitive-subspace-distance-metric"]], "Protected Euclidean Distance": [[44, "protected-euclidean-distance"]], "Euclidean Distance": [[44, "euclidean-distance"]], "Wasserstein Distance": [[44, "wasserstein-distance"]], "Post-Processing": [[46, "post-processing"]], "Base post-processing class": [[46, "base-post-processing-class"]], "Graph Laplacian Individual Fairness (GLIF)": [[46, "graph-laplacian-individual-fairness-glif"]], "Utilities": [[47, "utilities"]], "Data utilities": [[47, "module-inFairness.utils.datautils"]], "Post-Processing utilities": [[47, "module-inFairness.utils.postprocessing"]], "Tutorial": [[48, "tutorial"]], "Minimal example": [[48, "minimal-example"]]}, "indexentries": {"infairness": [[0, "module-inFairness"]], "module": [[0, "module-inFairness"], [1, "module-inFairness.auditor"], [2, "module-inFairness.auditor.auditor"], [3, "module-inFairness.auditor.datainterface"], [4, "module-inFairness.auditor.sensei_auditor"], [5, "module-inFairness.auditor.sensr_auditor"], [6, "module-inFairness.auditor.senstir_auditor"], [7, "module-inFairness.distances"], [8, "module-inFairness.distances.distance"], [9, "module-inFairness.distances.euclidean_dists"], [10, "module-inFairness.distances.explore_distance"], [11, "module-inFairness.distances.logistic_sensitive_subspace"], [12, "module-inFairness.distances.mahalanobis_distance"], [13, "module-inFairness.distances.sensitive_subspace_dist"], [14, "module-inFairness.distances.wasserstein_distance"], [15, "module-inFairness.fairalgo"], [16, "module-inFairness.fairalgo.datainterfaces"], [17, "module-inFairness.fairalgo.sensei"], [18, "module-inFairness.fairalgo.sensr"], [19, "module-inFairness.fairalgo.senstir"], [20, "module-inFairness.postprocessing"], [21, "module-inFairness.postprocessing.base_postprocessing"], [22, "module-inFairness.postprocessing.data_ds"], [23, "module-inFairness.postprocessing.datainterfaces"], [24, "module-inFairness.postprocessing.distance_ds"], [25, "module-inFairness.postprocessing.glif"], [26, "module-inFairness.utils"], [27, "module-inFairness.utils.datautils"], [28, "module-inFairness.utils.misc"], [29, "module-inFairness.utils.ndcg"], [30, "module-inFairness.utils.params"], [31, "module-inFairness.utils.plackett_luce"], [32, "module-inFairness.utils.postprocessing"], [33, "module-inFairness.utils.validationutils"], [47, "module-inFairness.utils.datautils"], [47, "module-inFairness.utils.postprocessing"]], "auditor (class in infairness.auditor)": [[1, "inFairness.auditor.Auditor"], [36, "inFairness.auditor.Auditor"]], "sensrauditor (class in infairness.auditor)": [[1, "inFairness.auditor.SenSRAuditor"], [43, "inFairness.auditor.SenSRAuditor"]], "senstirauditor (class in infairness.auditor)": [[1, "inFairness.auditor.SenSTIRAuditor"], [43, "inFairness.auditor.SenSTIRAuditor"]], "senseiauditor (class in infairness.auditor)": [[1, "inFairness.auditor.SenSeIAuditor"], [43, "inFairness.auditor.SenSeIAuditor"]], "audit() (infairness.auditor.auditor method)": [[1, "inFairness.auditor.Auditor.audit"], [36, "inFairness.auditor.Auditor.audit"]], "audit() (infairness.auditor.sensrauditor method)": [[1, "inFairness.auditor.SenSRAuditor.audit"], [43, "inFairness.auditor.SenSRAuditor.audit"]], "audit() (infairness.auditor.senseiauditor method)": [[1, "inFairness.auditor.SenSeIAuditor.audit"], [43, "inFairness.auditor.SenSeIAuditor.audit"]], "compute_audit_result() (infairness.auditor.auditor method)": [[1, "inFairness.auditor.Auditor.compute_audit_result"], [36, "inFairness.auditor.Auditor.compute_audit_result"]], "compute_loss_ratio() (infairness.auditor.auditor method)": [[1, "inFairness.auditor.Auditor.compute_loss_ratio"], [36, "inFairness.auditor.Auditor.compute_loss_ratio"]], "generate_worst_case_examples() (infairness.auditor.auditor method)": [[1, "inFairness.auditor.Auditor.generate_worst_case_examples"], [36, "inFairness.auditor.Auditor.generate_worst_case_examples"]], "generate_worst_case_examples() (infairness.auditor.sensrauditor method)": [[1, "inFairness.auditor.SenSRAuditor.generate_worst_case_examples"], [43, "inFairness.auditor.SenSRAuditor.generate_worst_case_examples"]], "generate_worst_case_examples() (infairness.auditor.senstirauditor method)": [[1, "inFairness.auditor.SenSTIRAuditor.generate_worst_case_examples"], [43, "inFairness.auditor.SenSTIRAuditor.generate_worst_case_examples"]], "generate_worst_case_examples() (infairness.auditor.senseiauditor method)": [[1, "inFairness.auditor.SenSeIAuditor.generate_worst_case_examples"], [43, "inFairness.auditor.SenSeIAuditor.generate_worst_case_examples"]], "infairness.auditor": [[1, "module-inFairness.auditor"]], "auditor (class in infairness.auditor.auditor)": [[2, "inFairness.auditor.auditor.Auditor"]], "audit() (infairness.auditor.auditor.auditor method)": [[2, "inFairness.auditor.auditor.Auditor.audit"]], "compute_audit_result() (infairness.auditor.auditor.auditor method)": [[2, "inFairness.auditor.auditor.Auditor.compute_audit_result"]], "compute_loss_ratio() (infairness.auditor.auditor.auditor method)": [[2, "inFairness.auditor.auditor.Auditor.compute_loss_ratio"]], "generate_worst_case_examples() (infairness.auditor.auditor.auditor method)": [[2, "inFairness.auditor.auditor.Auditor.generate_worst_case_examples"]], "infairness.auditor.auditor": [[2, "module-inFairness.auditor.auditor"]], "auditorresponse (class in infairness.auditor.datainterface)": [[3, "inFairness.auditor.datainterface.AuditorResponse"]], "confidence (infairness.auditor.datainterface.auditorresponse attribute)": [[3, "inFairness.auditor.datainterface.AuditorResponse.confidence"]], "infairness.auditor.datainterface": [[3, "module-inFairness.auditor.datainterface"]], "is_model_fair (infairness.auditor.datainterface.auditorresponse attribute)": [[3, "inFairness.auditor.datainterface.AuditorResponse.is_model_fair"]], "lossratio_mean (infairness.auditor.datainterface.auditorresponse attribute)": [[3, "inFairness.auditor.datainterface.AuditorResponse.lossratio_mean"]], "lossratio_std (infairness.auditor.datainterface.auditorresponse attribute)": [[3, "inFairness.auditor.datainterface.AuditorResponse.lossratio_std"]], "lower_bound (infairness.auditor.datainterface.auditorresponse attribute)": [[3, "inFairness.auditor.datainterface.AuditorResponse.lower_bound"]], "pval (infairness.auditor.datainterface.auditorresponse attribute)": [[3, "inFairness.auditor.datainterface.AuditorResponse.pval"]], "threshold (infairness.auditor.datainterface.auditorresponse attribute)": [[3, "inFairness.auditor.datainterface.AuditorResponse.threshold"]], "senseiauditor (class in infairness.auditor.sensei_auditor)": [[4, "inFairness.auditor.sensei_auditor.SenSeIAuditor"]], "audit() (infairness.auditor.sensei_auditor.senseiauditor method)": [[4, "inFairness.auditor.sensei_auditor.SenSeIAuditor.audit"]], "generate_worst_case_examples() (infairness.auditor.sensei_auditor.senseiauditor method)": [[4, "inFairness.auditor.sensei_auditor.SenSeIAuditor.generate_worst_case_examples"]], "infairness.auditor.sensei_auditor": [[4, "module-inFairness.auditor.sensei_auditor"]], "sensrauditor (class in infairness.auditor.sensr_auditor)": [[5, "inFairness.auditor.sensr_auditor.SenSRAuditor"]], "audit() (infairness.auditor.sensr_auditor.sensrauditor method)": [[5, "inFairness.auditor.sensr_auditor.SenSRAuditor.audit"]], "generate_worst_case_examples() (infairness.auditor.sensr_auditor.sensrauditor method)": [[5, "inFairness.auditor.sensr_auditor.SenSRAuditor.generate_worst_case_examples"]], "infairness.auditor.sensr_auditor": [[5, "module-inFairness.auditor.sensr_auditor"]], "senstirauditor (class in infairness.auditor.senstir_auditor)": [[6, "inFairness.auditor.senstir_auditor.SenSTIRAuditor"]], "generate_worst_case_examples() (infairness.auditor.senstir_auditor.senstirauditor method)": [[6, "inFairness.auditor.senstir_auditor.SenSTIRAuditor.generate_worst_case_examples"]], "infairness.auditor.senstir_auditor": [[6, "module-inFairness.auditor.senstir_auditor"]], "distance (class in infairness.distances)": [[7, "inFairness.distances.Distance"]], "exploredistance (class in infairness.distances)": [[7, "inFairness.distances.EXPLOREDistance"], [44, "inFairness.distances.EXPLOREDistance"]], "euclideandistance (class in infairness.distances)": [[7, "inFairness.distances.EuclideanDistance"], [44, "inFairness.distances.EuclideanDistance"]], "logisticregsensitivesubspace (class in infairness.distances)": [[7, "inFairness.distances.LogisticRegSensitiveSubspace"], [44, "inFairness.distances.LogisticRegSensitiveSubspace"]], "mahalanobisdistances (class in infairness.distances)": [[7, "inFairness.distances.MahalanobisDistances"], [37, "inFairness.distances.MahalanobisDistances"], [44, "inFairness.distances.MahalanobisDistances"]], "protectedeuclideandistance (class in infairness.distances)": [[7, "inFairness.distances.ProtectedEuclideanDistance"], [44, "inFairness.distances.ProtectedEuclideanDistance"]], "svdsensitivesubspacedistance (class in infairness.distances)": [[7, "inFairness.distances.SVDSensitiveSubspaceDistance"], [44, "inFairness.distances.SVDSensitiveSubspaceDistance"]], "sensitivesubspacedistance (class in infairness.distances)": [[7, "inFairness.distances.SensitiveSubspaceDistance"], [37, "inFairness.distances.SensitiveSubspaceDistance"], [44, "inFairness.distances.SensitiveSubspaceDistance"]], "squaredeuclideandistance (class in infairness.distances)": [[7, "inFairness.distances.SquaredEuclideanDistance"]], "wassersteindistance (class in infairness.distances)": [[7, "inFairness.distances.WassersteinDistance"], [44, "inFairness.distances.WassersteinDistance"]], "compute_basis_vectors() (infairness.distances.svdsensitivesubspacedistance method)": [[7, "inFairness.distances.SVDSensitiveSubspaceDistance.compute_basis_vectors"], [44, "inFairness.distances.SVDSensitiveSubspaceDistance.compute_basis_vectors"]], "compute_basis_vectors_data() (infairness.distances.logisticregsensitivesubspace method)": [[7, "inFairness.distances.LogisticRegSensitiveSubspace.compute_basis_vectors_data"]], "compute_basis_vectors_protected_idxs() (infairness.distances.logisticregsensitivesubspace method)": [[7, "inFairness.distances.LogisticRegSensitiveSubspace.compute_basis_vectors_protected_idxs"]], "compute_projection_complement() (infairness.distances.sensitivesubspacedistance method)": [[7, "inFairness.distances.SensitiveSubspaceDistance.compute_projection_complement"], [37, "inFairness.distances.SensitiveSubspaceDistance.compute_projection_complement"], [44, "inFairness.distances.SensitiveSubspaceDistance.compute_projection_complement"]], "compute_sigma() (infairness.distances.exploredistance method)": [[7, "inFairness.distances.EXPLOREDistance.compute_sigma"]], "fit() (infairness.distances.distance method)": [[7, "inFairness.distances.Distance.fit"]], "fit() (infairness.distances.exploredistance method)": [[7, "inFairness.distances.EXPLOREDistance.fit"], [44, "inFairness.distances.EXPLOREDistance.fit"]], "fit() (infairness.distances.logisticregsensitivesubspace method)": [[7, "inFairness.distances.LogisticRegSensitiveSubspace.fit"], [44, "inFairness.distances.LogisticRegSensitiveSubspace.fit"]], "fit() (infairness.distances.mahalanobisdistances method)": [[7, "inFairness.distances.MahalanobisDistances.fit"], [37, "inFairness.distances.MahalanobisDistances.fit"], [44, "inFairness.distances.MahalanobisDistances.fit"]], "fit() (infairness.distances.protectedeuclideandistance method)": [[7, "inFairness.distances.ProtectedEuclideanDistance.fit"], [44, "inFairness.distances.ProtectedEuclideanDistance.fit"]], "fit() (infairness.distances.svdsensitivesubspacedistance method)": [[7, "inFairness.distances.SVDSensitiveSubspaceDistance.fit"], [44, "inFairness.distances.SVDSensitiveSubspaceDistance.fit"]], "fit() (infairness.distances.sensitivesubspacedistance method)": [[7, "inFairness.distances.SensitiveSubspaceDistance.fit"], [37, "inFairness.distances.SensitiveSubspaceDistance.fit"], [44, "inFairness.distances.SensitiveSubspaceDistance.fit"]], "fit() (infairness.distances.squaredeuclideandistance method)": [[7, "inFairness.distances.SquaredEuclideanDistance.fit"]], "forward() (infairness.distances.distance method)": [[7, "inFairness.distances.Distance.forward"]], "forward() (infairness.distances.euclideandistance method)": [[7, "inFairness.distances.EuclideanDistance.forward"], [44, "inFairness.distances.EuclideanDistance.forward"]], "forward() (infairness.distances.mahalanobisdistances method)": [[7, "inFairness.distances.MahalanobisDistances.forward"], [37, "inFairness.distances.MahalanobisDistances.forward"], [44, "inFairness.distances.MahalanobisDistances.forward"]], "forward() (infairness.distances.protectedeuclideandistance method)": [[7, "inFairness.distances.ProtectedEuclideanDistance.forward"], [44, "inFairness.distances.ProtectedEuclideanDistance.forward"]], "forward() (infairness.distances.wassersteindistance method)": [[7, "inFairness.distances.WassersteinDistance.forward"], [44, "inFairness.distances.WassersteinDistance.forward"]], "infairness.distances": [[7, "module-inFairness.distances"]], "load_state_dict() (infairness.distances.distance method)": [[7, "inFairness.distances.Distance.load_state_dict"]], "logistic_regression_models (infairness.distances.logisticregsensitivesubspace property)": [[7, "inFairness.distances.LogisticRegSensitiveSubspace.logistic_regression_models"], [44, "inFairness.distances.LogisticRegSensitiveSubspace.logistic_regression_models"]], "to() (infairness.distances.mahalanobisdistances method)": [[7, "inFairness.distances.MahalanobisDistances.to"], [37, "inFairness.distances.MahalanobisDistances.to"], [44, "inFairness.distances.MahalanobisDistances.to"]], "to() (infairness.distances.protectedeuclideandistance method)": [[7, "inFairness.distances.ProtectedEuclideanDistance.to"], [44, "inFairness.distances.ProtectedEuclideanDistance.to"]], "training (infairness.distances.distance attribute)": [[7, "inFairness.distances.Distance.training"]], "training (infairness.distances.exploredistance attribute)": [[7, "inFairness.distances.EXPLOREDistance.training"]], "training (infairness.distances.euclideandistance attribute)": [[7, "inFairness.distances.EuclideanDistance.training"]], "training (infairness.distances.logisticregsensitivesubspace attribute)": [[7, "inFairness.distances.LogisticRegSensitiveSubspace.training"]], "training (infairness.distances.mahalanobisdistances attribute)": [[7, "inFairness.distances.MahalanobisDistances.training"]], "training (infairness.distances.protectedeuclideandistance attribute)": [[7, "inFairness.distances.ProtectedEuclideanDistance.training"]], "training (infairness.distances.svdsensitivesubspacedistance attribute)": [[7, "inFairness.distances.SVDSensitiveSubspaceDistance.training"]], "training (infairness.distances.sensitivesubspacedistance attribute)": [[7, "inFairness.distances.SensitiveSubspaceDistance.training"]], "training (infairness.distances.squaredeuclideandistance attribute)": [[7, "inFairness.distances.SquaredEuclideanDistance.training"]], "training (infairness.distances.wassersteindistance attribute)": [[7, "inFairness.distances.WassersteinDistance.training"]], "distance (class in infairness.distances.distance)": [[8, "inFairness.distances.distance.Distance"], [37, "inFairness.distances.distance.Distance"]], "fit() (infairness.distances.distance.distance method)": [[8, "inFairness.distances.distance.Distance.fit"], [37, "inFairness.distances.distance.Distance.fit"]], "forward() (infairness.distances.distance.distance method)": [[8, "inFairness.distances.distance.Distance.forward"], [37, "inFairness.distances.distance.Distance.forward"]], "infairness.distances.distance": [[8, "module-inFairness.distances.distance"]], "load_state_dict() (infairness.distances.distance.distance method)": [[8, "inFairness.distances.distance.Distance.load_state_dict"], [37, "inFairness.distances.distance.Distance.load_state_dict"]], "training (infairness.distances.distance.distance attribute)": [[8, "inFairness.distances.distance.Distance.training"]], "euclideandistance (class in infairness.distances.euclidean_dists)": [[9, "inFairness.distances.euclidean_dists.EuclideanDistance"]], "protectedeuclideandistance (class in infairness.distances.euclidean_dists)": [[9, "inFairness.distances.euclidean_dists.ProtectedEuclideanDistance"]], "fit() (infairness.distances.euclidean_dists.protectedeuclideandistance method)": [[9, "inFairness.distances.euclidean_dists.ProtectedEuclideanDistance.fit"]], "forward() (infairness.distances.euclidean_dists.euclideandistance method)": [[9, "inFairness.distances.euclidean_dists.EuclideanDistance.forward"]], "forward() (infairness.distances.euclidean_dists.protectedeuclideandistance method)": [[9, "inFairness.distances.euclidean_dists.ProtectedEuclideanDistance.forward"]], "infairness.distances.euclidean_dists": [[9, "module-inFairness.distances.euclidean_dists"]], "to() (infairness.distances.euclidean_dists.protectedeuclideandistance method)": [[9, "inFairness.distances.euclidean_dists.ProtectedEuclideanDistance.to"]], "training (infairness.distances.euclidean_dists.euclideandistance attribute)": [[9, "inFairness.distances.euclidean_dists.EuclideanDistance.training"]], "training (infairness.distances.euclidean_dists.protectedeuclideandistance attribute)": [[9, "inFairness.distances.euclidean_dists.ProtectedEuclideanDistance.training"]], "exploredistance (class in infairness.distances.explore_distance)": [[10, "inFairness.distances.explore_distance.EXPLOREDistance"]], "compute_sigma() (infairness.distances.explore_distance.exploredistance method)": [[10, "inFairness.distances.explore_distance.EXPLOREDistance.compute_sigma"]], "fit() (infairness.distances.explore_distance.exploredistance method)": [[10, "inFairness.distances.explore_distance.EXPLOREDistance.fit"]], "infairness.distances.explore_distance": [[10, "module-inFairness.distances.explore_distance"]], "training (infairness.distances.explore_distance.exploredistance attribute)": [[10, "inFairness.distances.explore_distance.EXPLOREDistance.training"]], "logisticregsensitivesubspace (class in infairness.distances.logistic_sensitive_subspace)": [[11, "inFairness.distances.logistic_sensitive_subspace.LogisticRegSensitiveSubspace"]], "compute_basis_vectors_data() (infairness.distances.logistic_sensitive_subspace.logisticregsensitivesubspace method)": [[11, "inFairness.distances.logistic_sensitive_subspace.LogisticRegSensitiveSubspace.compute_basis_vectors_data"]], "compute_basis_vectors_protected_idxs() (infairness.distances.logistic_sensitive_subspace.logisticregsensitivesubspace method)": [[11, "inFairness.distances.logistic_sensitive_subspace.LogisticRegSensitiveSubspace.compute_basis_vectors_protected_idxs"]], "fit() (infairness.distances.logistic_sensitive_subspace.logisticregsensitivesubspace method)": [[11, "inFairness.distances.logistic_sensitive_subspace.LogisticRegSensitiveSubspace.fit"]], "infairness.distances.logistic_sensitive_subspace": [[11, "module-inFairness.distances.logistic_sensitive_subspace"]], "logistic_regression_models (infairness.distances.logistic_sensitive_subspace.logisticregsensitivesubspace property)": [[11, "inFairness.distances.logistic_sensitive_subspace.LogisticRegSensitiveSubspace.logistic_regression_models"]], "training (infairness.distances.logistic_sensitive_subspace.logisticregsensitivesubspace attribute)": [[11, "inFairness.distances.logistic_sensitive_subspace.LogisticRegSensitiveSubspace.training"]], "mahalanobisdistances (class in infairness.distances.mahalanobis_distance)": [[12, "inFairness.distances.mahalanobis_distance.MahalanobisDistances"]], "squaredeuclideandistance (class in infairness.distances.mahalanobis_distance)": [[12, "inFairness.distances.mahalanobis_distance.SquaredEuclideanDistance"]], "fit() (infairness.distances.mahalanobis_distance.mahalanobisdistances method)": [[12, "inFairness.distances.mahalanobis_distance.MahalanobisDistances.fit"]], "fit() (infairness.distances.mahalanobis_distance.squaredeuclideandistance method)": [[12, "inFairness.distances.mahalanobis_distance.SquaredEuclideanDistance.fit"]], "forward() (infairness.distances.mahalanobis_distance.mahalanobisdistances method)": [[12, "inFairness.distances.mahalanobis_distance.MahalanobisDistances.forward"]], "infairness.distances.mahalanobis_distance": [[12, "module-inFairness.distances.mahalanobis_distance"]], "to() (infairness.distances.mahalanobis_distance.mahalanobisdistances method)": [[12, "inFairness.distances.mahalanobis_distance.MahalanobisDistances.to"]], "training (infairness.distances.mahalanobis_distance.mahalanobisdistances attribute)": [[12, "inFairness.distances.mahalanobis_distance.MahalanobisDistances.training"]], "training (infairness.distances.mahalanobis_distance.squaredeuclideandistance attribute)": [[12, "inFairness.distances.mahalanobis_distance.SquaredEuclideanDistance.training"]], "svdsensitivesubspacedistance (class in infairness.distances.sensitive_subspace_dist)": [[13, "inFairness.distances.sensitive_subspace_dist.SVDSensitiveSubspaceDistance"]], "sensitivesubspacedistance (class in infairness.distances.sensitive_subspace_dist)": [[13, "inFairness.distances.sensitive_subspace_dist.SensitiveSubspaceDistance"]], "compute_basis_vectors() (infairness.distances.sensitive_subspace_dist.svdsensitivesubspacedistance method)": [[13, "inFairness.distances.sensitive_subspace_dist.SVDSensitiveSubspaceDistance.compute_basis_vectors"]], "compute_projection_complement() (infairness.distances.sensitive_subspace_dist.sensitivesubspacedistance method)": [[13, "inFairness.distances.sensitive_subspace_dist.SensitiveSubspaceDistance.compute_projection_complement"]], "fit() (infairness.distances.sensitive_subspace_dist.svdsensitivesubspacedistance method)": [[13, "inFairness.distances.sensitive_subspace_dist.SVDSensitiveSubspaceDistance.fit"]], "fit() (infairness.distances.sensitive_subspace_dist.sensitivesubspacedistance method)": [[13, "inFairness.distances.sensitive_subspace_dist.SensitiveSubspaceDistance.fit"]], "infairness.distances.sensitive_subspace_dist": [[13, "module-inFairness.distances.sensitive_subspace_dist"]], "training (infairness.distances.sensitive_subspace_dist.svdsensitivesubspacedistance attribute)": [[13, "inFairness.distances.sensitive_subspace_dist.SVDSensitiveSubspaceDistance.training"]], "training (infairness.distances.sensitive_subspace_dist.sensitivesubspacedistance attribute)": [[13, "inFairness.distances.sensitive_subspace_dist.SensitiveSubspaceDistance.training"]], "wassersteindistance (class in infairness.distances.wasserstein_distance)": [[14, "inFairness.distances.wasserstein_distance.WassersteinDistance"]], "forward() (infairness.distances.wasserstein_distance.wassersteindistance method)": [[14, "inFairness.distances.wasserstein_distance.WassersteinDistance.forward"]], "infairness.distances.wasserstein_distance": [[14, "module-inFairness.distances.wasserstein_distance"]], "training (infairness.distances.wasserstein_distance.wassersteindistance attribute)": [[14, "inFairness.distances.wasserstein_distance.WassersteinDistance.training"]], "fairmodelresponse (class in infairness.fairalgo)": [[15, "inFairness.fairalgo.FairModelResponse"]], "sensr (class in infairness.fairalgo)": [[15, "inFairness.fairalgo.SenSR"], [42, "inFairness.fairalgo.SenSR"]], "senstir (class in infairness.fairalgo)": [[15, "inFairness.fairalgo.SenSTIR"], [42, "inFairness.fairalgo.SenSTIR"]], "sensei (class in infairness.fairalgo)": [[15, "inFairness.fairalgo.SenSeI"], [42, "inFairness.fairalgo.SenSeI"]], "forward() (infairness.fairalgo.sensr method)": [[15, "inFairness.fairalgo.SenSR.forward"], [42, "inFairness.fairalgo.SenSR.forward"]], "forward() (infairness.fairalgo.senstir method)": [[15, "inFairness.fairalgo.SenSTIR.forward"], [42, "inFairness.fairalgo.SenSTIR.forward"]], "forward() (infairness.fairalgo.sensei method)": [[15, "inFairness.fairalgo.SenSeI.forward"], [42, "inFairness.fairalgo.SenSeI.forward"]], "forward_test() (infairness.fairalgo.sensr method)": [[15, "inFairness.fairalgo.SenSR.forward_test"], [42, "inFairness.fairalgo.SenSR.forward_test"]], "forward_test() (infairness.fairalgo.senstir method)": [[15, "inFairness.fairalgo.SenSTIR.forward_test"], [42, "inFairness.fairalgo.SenSTIR.forward_test"]], "forward_test() (infairness.fairalgo.sensei method)": [[15, "inFairness.fairalgo.SenSeI.forward_test"], [42, "inFairness.fairalgo.SenSeI.forward_test"]], "forward_train() (infairness.fairalgo.sensr method)": [[15, "inFairness.fairalgo.SenSR.forward_train"], [42, "inFairness.fairalgo.SenSR.forward_train"]], "forward_train() (infairness.fairalgo.senstir method)": [[15, "inFairness.fairalgo.SenSTIR.forward_train"]], "forward_train() (infairness.fairalgo.sensei method)": [[15, "inFairness.fairalgo.SenSeI.forward_train"], [42, "inFairness.fairalgo.SenSeI.forward_train"]], "infairness.fairalgo": [[15, "module-inFairness.fairalgo"]], "loss (infairness.fairalgo.fairmodelresponse attribute)": [[15, "inFairness.fairalgo.FairModelResponse.loss"]], "training (infairness.fairalgo.sensr attribute)": [[15, "inFairness.fairalgo.SenSR.training"]], "training (infairness.fairalgo.senstir attribute)": [[15, "inFairness.fairalgo.SenSTIR.training"]], "training (infairness.fairalgo.sensei attribute)": [[15, "inFairness.fairalgo.SenSeI.training"]], "y_pred (infairness.fairalgo.fairmodelresponse attribute)": [[15, "inFairness.fairalgo.FairModelResponse.y_pred"]], "fairmodelresponse (class in infairness.fairalgo.datainterfaces)": [[16, "inFairness.fairalgo.datainterfaces.FairModelResponse"]], "infairness.fairalgo.datainterfaces": [[16, "module-inFairness.fairalgo.datainterfaces"]], "loss (infairness.fairalgo.datainterfaces.fairmodelresponse attribute)": [[16, "inFairness.fairalgo.datainterfaces.FairModelResponse.loss"]], "y_pred (infairness.fairalgo.datainterfaces.fairmodelresponse attribute)": [[16, "inFairness.fairalgo.datainterfaces.FairModelResponse.y_pred"]], "sensei (class in infairness.fairalgo.sensei)": [[17, "inFairness.fairalgo.sensei.SenSeI"]], "forward() (infairness.fairalgo.sensei.sensei method)": [[17, "inFairness.fairalgo.sensei.SenSeI.forward"]], "forward_test() (infairness.fairalgo.sensei.sensei method)": [[17, "inFairness.fairalgo.sensei.SenSeI.forward_test"]], "forward_train() (infairness.fairalgo.sensei.sensei method)": [[17, "inFairness.fairalgo.sensei.SenSeI.forward_train"]], "infairness.fairalgo.sensei": [[17, "module-inFairness.fairalgo.sensei"]], "training (infairness.fairalgo.sensei.sensei attribute)": [[17, "inFairness.fairalgo.sensei.SenSeI.training"]], "sensr (class in infairness.fairalgo.sensr)": [[18, "inFairness.fairalgo.sensr.SenSR"]], "forward() (infairness.fairalgo.sensr.sensr method)": [[18, "inFairness.fairalgo.sensr.SenSR.forward"]], "forward_test() (infairness.fairalgo.sensr.sensr method)": [[18, "inFairness.fairalgo.sensr.SenSR.forward_test"]], "forward_train() (infairness.fairalgo.sensr.sensr method)": [[18, "inFairness.fairalgo.sensr.SenSR.forward_train"]], "infairness.fairalgo.sensr": [[18, "module-inFairness.fairalgo.sensr"]], "training (infairness.fairalgo.sensr.sensr attribute)": [[18, "inFairness.fairalgo.sensr.SenSR.training"]], "senstir (class in infairness.fairalgo.senstir)": [[19, "inFairness.fairalgo.senstir.SenSTIR"]], "forward() (infairness.fairalgo.senstir.senstir method)": [[19, "inFairness.fairalgo.senstir.SenSTIR.forward"]], "forward_test() (infairness.fairalgo.senstir.senstir method)": [[19, "inFairness.fairalgo.senstir.SenSTIR.forward_test"]], "forward_train() (infairness.fairalgo.senstir.senstir method)": [[19, "inFairness.fairalgo.senstir.SenSTIR.forward_train"]], "infairness.fairalgo.senstir": [[19, "module-inFairness.fairalgo.senstir"]], "training (infairness.fairalgo.senstir.senstir attribute)": [[19, "inFairness.fairalgo.senstir.SenSTIR.training"]], "basepostprocessing (class in infairness.postprocessing)": [[20, "inFairness.postprocessing.BasePostProcessing"], [46, "inFairness.postprocessing.BasePostProcessing"]], "graphlaplacianif (class in infairness.postprocessing)": [[20, "inFairness.postprocessing.GraphLaplacianIF"], [46, "inFairness.postprocessing.GraphLaplacianIF"]], "add_datapoints() (infairness.postprocessing.basepostprocessing method)": [[20, "inFairness.postprocessing.BasePostProcessing.add_datapoints"], [46, "inFairness.postprocessing.BasePostProcessing.add_datapoints"]], "data (infairness.postprocessing.basepostprocessing property)": [[20, "inFairness.postprocessing.BasePostProcessing.data"], [46, "inFairness.postprocessing.BasePostProcessing.data"]], "distance_matrix (infairness.postprocessing.basepostprocessing property)": [[20, "inFairness.postprocessing.BasePostProcessing.distance_matrix"], [46, "inFairness.postprocessing.BasePostProcessing.distance_matrix"]], "get_objective() (infairness.postprocessing.graphlaplacianif method)": [[20, "inFairness.postprocessing.GraphLaplacianIF.get_objective"], [46, "inFairness.postprocessing.GraphLaplacianIF.get_objective"]], "infairness.postprocessing": [[20, "module-inFairness.postprocessing"]], "postprocess() (infairness.postprocessing.basepostprocessing method)": [[20, "inFairness.postprocessing.BasePostProcessing.postprocess"]], "postprocess() (infairness.postprocessing.graphlaplacianif method)": [[20, "inFairness.postprocessing.GraphLaplacianIF.postprocess"], [46, "inFairness.postprocessing.GraphLaplacianIF.postprocess"]], "reset_datapoints() (infairness.postprocessing.basepostprocessing method)": [[20, "inFairness.postprocessing.BasePostProcessing.reset_datapoints"], [46, "inFairness.postprocessing.BasePostProcessing.reset_datapoints"]], "basepostprocessing (class in infairness.postprocessing.base_postprocessing)": [[21, "inFairness.postprocessing.base_postprocessing.BasePostProcessing"]], "add_datapoints() (infairness.postprocessing.base_postprocessing.basepostprocessing method)": [[21, "inFairness.postprocessing.base_postprocessing.BasePostProcessing.add_datapoints"]], "data (infairness.postprocessing.base_postprocessing.basepostprocessing property)": [[21, "inFairness.postprocessing.base_postprocessing.BasePostProcessing.data"]], "distance_matrix (infairness.postprocessing.base_postprocessing.basepostprocessing property)": [[21, "inFairness.postprocessing.base_postprocessing.BasePostProcessing.distance_matrix"]], "infairness.postprocessing.base_postprocessing": [[21, "module-inFairness.postprocessing.base_postprocessing"]], "postprocess() (infairness.postprocessing.base_postprocessing.basepostprocessing method)": [[21, "inFairness.postprocessing.base_postprocessing.BasePostProcessing.postprocess"]], "reset_datapoints() (infairness.postprocessing.base_postprocessing.basepostprocessing method)": [[21, "inFairness.postprocessing.base_postprocessing.BasePostProcessing.reset_datapoints"]], "postprocessingdatastore (class in infairness.postprocessing.data_ds)": [[22, "inFairness.postprocessing.data_ds.PostProcessingDataStore"]], "add_datapoints() (infairness.postprocessing.data_ds.postprocessingdatastore method)": [[22, "inFairness.postprocessing.data_ds.PostProcessingDataStore.add_datapoints"]], "add_datapoints_x() (infairness.postprocessing.data_ds.postprocessingdatastore method)": [[22, "inFairness.postprocessing.data_ds.PostProcessingDataStore.add_datapoints_X"]], "add_datapoints_y() (infairness.postprocessing.data_ds.postprocessingdatastore method)": [[22, "inFairness.postprocessing.data_ds.PostProcessingDataStore.add_datapoints_Y"]], "distance_matrix (infairness.postprocessing.data_ds.postprocessingdatastore property)": [[22, "inFairness.postprocessing.data_ds.PostProcessingDataStore.distance_matrix"]], "infairness.postprocessing.data_ds": [[22, "module-inFairness.postprocessing.data_ds"]], "reset() (infairness.postprocessing.data_ds.postprocessingdatastore method)": [[22, "inFairness.postprocessing.data_ds.PostProcessingDataStore.reset"]], "postprocessingobjectiveresponse (class in infairness.postprocessing.datainterfaces)": [[23, "inFairness.postprocessing.datainterfaces.PostProcessingObjectiveResponse"]], "infairness.postprocessing.datainterfaces": [[23, "module-inFairness.postprocessing.datainterfaces"]], "objective (infairness.postprocessing.datainterfaces.postprocessingobjectiveresponse attribute)": [[23, "inFairness.postprocessing.datainterfaces.PostProcessingObjectiveResponse.objective"]], "y_solution (infairness.postprocessing.datainterfaces.postprocessingobjectiveresponse attribute)": [[23, "inFairness.postprocessing.datainterfaces.PostProcessingObjectiveResponse.y_solution"]], "distancestructure (class in infairness.postprocessing.distance_ds)": [[24, "inFairness.postprocessing.distance_ds.DistanceStructure"]], "build_distance_matrix() (infairness.postprocessing.distance_ds.distancestructure method)": [[24, "inFairness.postprocessing.distance_ds.DistanceStructure.build_distance_matrix"]], "infairness.postprocessing.distance_ds": [[24, "module-inFairness.postprocessing.distance_ds"]], "reset() (infairness.postprocessing.distance_ds.distancestructure method)": [[24, "inFairness.postprocessing.distance_ds.DistanceStructure.reset"]], "graphlaplacianif (class in infairness.postprocessing.glif)": [[25, "inFairness.postprocessing.glif.GraphLaplacianIF"]], "get_objective() (infairness.postprocessing.glif.graphlaplacianif method)": [[25, "inFairness.postprocessing.glif.GraphLaplacianIF.get_objective"]], "infairness.postprocessing.glif": [[25, "module-inFairness.postprocessing.glif"]], "postprocess() (infairness.postprocessing.glif.graphlaplacianif method)": [[25, "inFairness.postprocessing.glif.GraphLaplacianIF.postprocess"]], "infairness.utils": [[26, "module-inFairness.utils"]], "convert_tensor_to_numpy() (in module infairness.utils.datautils)": [[27, "inFairness.utils.datautils.convert_tensor_to_numpy"], [47, "inFairness.utils.datautils.convert_tensor_to_numpy"]], "generate_data_pairs() (in module infairness.utils.datautils)": [[27, "inFairness.utils.datautils.generate_data_pairs"], [47, "inFairness.utils.datautils.generate_data_pairs"]], "get_device() (in module infairness.utils.datautils)": [[27, "inFairness.utils.datautils.get_device"], [47, "inFairness.utils.datautils.get_device"]], "infairness.utils.datautils": [[27, "module-inFairness.utils.datautils"], [47, "module-inFairness.utils.datautils"]], "include_exclude_terms() (in module infairness.utils.datautils)": [[27, "inFairness.utils.datautils.include_exclude_terms"], [47, "inFairness.utils.datautils.include_exclude_terms"]], "infairness.utils.misc": [[28, "module-inFairness.utils.misc"]], "initializer() (in module infairness.utils.misc)": [[28, "inFairness.utils.misc.initializer"]], "discounted_cumulative_gain() (in module infairness.utils.ndcg)": [[29, "inFairness.utils.ndcg.discounted_cumulative_gain"]], "infairness.utils.ndcg": [[29, "module-inFairness.utils.ndcg"]], "monte_carlo_vect_ndcg() (in module infairness.utils.ndcg)": [[29, "inFairness.utils.ndcg.monte_carlo_vect_ndcg"]], "normalized_discounted_cumulative_gain() (in module infairness.utils.ndcg)": [[29, "inFairness.utils.ndcg.normalized_discounted_cumulative_gain"]], "vect_normalized_discounted_cumulative_gain() (in module infairness.utils.ndcg)": [[29, "inFairness.utils.ndcg.vect_normalized_discounted_cumulative_gain"]], "freeze_network() (in module infairness.utils.params)": [[30, "inFairness.utils.params.freeze_network"]], "infairness.utils.params": [[30, "module-inFairness.utils.params"]], "unfreeze_network() (in module infairness.utils.params)": [[30, "inFairness.utils.params.unfreeze_network"]], "plackettluce (class in infairness.utils.plackett_luce)": [[31, "inFairness.utils.plackett_luce.PlackettLuce"]], "arg_constraints (infairness.utils.plackett_luce.plackettluce attribute)": [[31, "inFairness.utils.plackett_luce.PlackettLuce.arg_constraints"]], "expand() (infairness.utils.plackett_luce.plackettluce method)": [[31, "inFairness.utils.plackett_luce.PlackettLuce.expand"]], "infairness.utils.plackett_luce": [[31, "module-inFairness.utils.plackett_luce"]], "log_prob() (infairness.utils.plackett_luce.plackettluce method)": [[31, "inFairness.utils.plackett_luce.PlackettLuce.log_prob"]], "sample() (infairness.utils.plackett_luce.plackettluce method)": [[31, "inFairness.utils.plackett_luce.PlackettLuce.sample"]], "support (infairness.utils.plackett_luce.plackettluce attribute)": [[31, "inFairness.utils.plackett_luce.PlackettLuce.support"]], "build_graph_from_dists() (in module infairness.utils.postprocessing)": [[32, "inFairness.utils.postprocessing.build_graph_from_dists"], [47, "inFairness.utils.postprocessing.build_graph_from_dists"]], "get_laplacian() (in module infairness.utils.postprocessing)": [[32, "inFairness.utils.postprocessing.get_laplacian"], [47, "inFairness.utils.postprocessing.get_laplacian"]], "infairness.utils.postprocessing": [[32, "module-inFairness.utils.postprocessing"], [47, "module-inFairness.utils.postprocessing"]], "laplacian_solve() (in module infairness.utils.postprocessing)": [[32, "inFairness.utils.postprocessing.laplacian_solve"], [47, "inFairness.utils.postprocessing.laplacian_solve"]], "infairness.utils.validationutils": [[33, "module-inFairness.utils.validationutils"]], "is_tensor_binary() (in module infairness.utils.validationutils)": [[33, "inFairness.utils.validationutils.is_tensor_binary"]]}})